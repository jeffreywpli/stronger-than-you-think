Dataset MNIST
    Number of datapoints: 60000
    Root location: /hdd2/nick/github.com/Kaylee0501/FWRENCH/datasets/torchvision_untransformed/MNIST
    Split: Train
Dataset MNIST
    Number of datapoints: 60000
    Root location: /hdd2/nick/github.com/Kaylee0501/FWRENCH/datasets/torchvision_untransformed/MNIST
    Split: Train
Dataset MNIST
    Number of datapoints: 60000
    Root location: /hdd2/nick/github.com/Kaylee0501/FWRENCH/datasets/torchvision_untransformed/MNIST
    Split: Train
2022-05-23 05:50:34 - loading data from datasets/MNIST_3000/train.json
  0%|          | 0/57000 [00:00<?, ?it/s]  1%|          | 700/57000 [00:00<00:08, 6996.80it/s]  2%|▏         | 1421/57000 [00:00<00:07, 7120.53it/s]  4%|▎         | 2134/57000 [00:00<00:07, 7096.24it/s]  5%|▌         | 2852/57000 [00:00<00:07, 7127.96it/s]  6%|▋         | 3565/57000 [00:00<00:07, 6976.03it/s]  8%|▊         | 4279/57000 [00:00<00:07, 7027.81it/s]  9%|▊         | 4983/57000 [00:00<00:07, 6991.43it/s] 10%|▉         | 5695/57000 [00:00<00:07, 7030.60it/s] 11%|█         | 6403/57000 [00:00<00:07, 7043.88it/s] 13%|█▎        | 7135/57000 [00:01<00:06, 7126.19it/s] 14%|█▍        | 7854/57000 [00:01<00:06, 7145.38it/s] 15%|█▌        | 8569/57000 [00:01<00:06, 7125.33it/s] 16%|█▋        | 9282/57000 [00:01<00:06, 7114.74it/s] 18%|█▊        | 9994/57000 [00:01<00:06, 7041.38it/s] 19%|█▉        | 10699/57000 [00:01<00:06, 7020.62it/s] 20%|██        | 11416/57000 [00:01<00:06, 7063.47it/s] 21%|██▏       | 12131/57000 [00:01<00:06, 7086.84it/s] 23%|██▎       | 12856/57000 [00:01<00:06, 7132.49it/s] 24%|██▍       | 13570/57000 [00:01<00:06, 7124.11it/s] 25%|██▌       | 14286/57000 [00:02<00:05, 7132.57it/s] 26%|██▋       | 15000/57000 [00:02<00:05, 7117.51it/s] 28%|██▊       | 15712/57000 [00:02<00:05, 7016.41it/s] 29%|██▉       | 16414/57000 [00:02<00:05, 7016.85it/s] 30%|███       | 17116/57000 [00:02<00:05, 6958.09it/s] 31%|███▏      | 17839/57000 [00:02<00:05, 7038.57it/s] 33%|███▎      | 18544/57000 [00:02<00:05, 6955.82it/s] 34%|███▍      | 19252/57000 [00:02<00:05, 6991.94it/s] 35%|███▌      | 19952/57000 [00:02<00:05, 6919.35it/s] 36%|███▌      | 20645/57000 [00:02<00:05, 6900.41it/s] 37%|███▋      | 21336/57000 [00:03<00:05, 6874.21it/s] 39%|███▊      | 22039/57000 [00:03<00:05, 6918.49it/s] 40%|███▉      | 22761/57000 [00:03<00:04, 7006.63it/s] 41%|████      | 23484/57000 [00:03<00:04, 7070.47it/s] 42%|████▏     | 24204/57000 [00:03<00:04, 7108.92it/s] 44%|████▎     | 24920/57000 [00:03<00:04, 7123.25it/s] 45%|████▌     | 25651/57000 [00:03<00:04, 7177.34it/s] 46%|████▋     | 26369/57000 [00:03<00:04, 7169.21it/s] 48%|████▊     | 27090/57000 [00:03<00:04, 7180.72it/s] 49%|████▉     | 27812/57000 [00:03<00:04, 7190.31it/s] 50%|█████     | 28532/57000 [00:04<00:03, 7164.92it/s] 51%|█████▏    | 29250/57000 [00:04<00:03, 7166.94it/s] 53%|█████▎    | 29967/57000 [00:04<00:03, 7098.24it/s] 54%|█████▍    | 30677/57000 [00:04<00:03, 7000.01it/s] 55%|█████▌    | 31378/57000 [00:04<00:03, 6962.28it/s] 56%|█████▋    | 32091/57000 [00:04<00:03, 7009.94it/s] 58%|█████▊    | 32793/57000 [00:04<00:03, 6972.71it/s] 59%|█████▉    | 33501/57000 [00:04<00:03, 7002.66it/s] 60%|██████    | 34220/57000 [00:04<00:03, 7056.03it/s] 61%|██████▏   | 34926/57000 [00:04<00:03, 6696.51it/s] 62%|██████▏   | 35613/57000 [00:05<00:03, 6744.66it/s] 64%|██████▍   | 36338/57000 [00:05<00:02, 6890.80it/s] 65%|██████▍   | 37037/57000 [00:05<00:02, 6918.01it/s] 66%|██████▌   | 37756/57000 [00:05<00:02, 6996.44it/s] 68%|██████▊   | 38482/57000 [00:05<00:02, 7072.87it/s] 69%|██████▉   | 39199/57000 [00:05<00:02, 7100.04it/s] 70%|███████   | 39910/57000 [00:05<00:02, 7057.81it/s] 71%|███████▏  | 40617/57000 [00:05<00:02, 7057.91it/s] 73%|███████▎  | 41327/57000 [00:05<00:02, 7070.17it/s] 74%|███████▎  | 42037/57000 [00:05<00:02, 7077.38it/s] 75%|███████▌  | 42763/57000 [00:06<00:01, 7129.20it/s] 76%|███████▋  | 43489/57000 [00:06<00:01, 7168.23it/s] 78%|███████▊  | 44206/57000 [00:06<00:01, 6859.45it/s] 79%|███████▉  | 44895/57000 [00:06<00:01, 6630.82it/s] 80%|███████▉  | 45562/57000 [00:06<00:01, 6469.76it/s] 81%|████████  | 46212/57000 [00:06<00:01, 6384.95it/s] 82%|████████▏ | 46853/57000 [00:06<00:01, 6285.52it/s] 83%|████████▎ | 47483/57000 [00:06<00:01, 6196.64it/s] 84%|████████▍ | 48104/57000 [00:06<00:01, 6173.15it/s] 86%|████████▌ | 48816/57000 [00:07<00:01, 6445.71it/s] 87%|████████▋ | 49534/57000 [00:07<00:01, 6660.46it/s] 88%|████████▊ | 50249/57000 [00:07<00:00, 6802.59it/s] 89%|████████▉ | 50970/57000 [00:07<00:00, 6920.93it/s] 91%|█████████ | 51676/57000 [00:07<00:00, 6961.03it/s] 92%|█████████▏| 52393/57000 [00:07<00:00, 7022.16it/s] 93%|█████████▎| 53101/57000 [00:07<00:00, 7039.00it/s] 94%|█████████▍| 53819/57000 [00:07<00:00, 7080.11it/s] 96%|█████████▌| 54532/57000 [00:07<00:00, 7093.83it/s] 97%|█████████▋| 55242/57000 [00:07<00:00, 7081.16it/s] 98%|█████████▊| 55951/57000 [00:08<00:00, 7064.57it/s] 99%|█████████▉| 56678/57000 [00:08<00:00, 7124.71it/s]100%|██████████| 57000/57000 [00:08<00:00, 6974.81it/s]
2022-05-23 05:50:42 - loading data from datasets/MNIST_3000/valid.json
  0%|          | 0/3000 [00:00<?, ?it/s] 23%|██▎       | 703/3000 [00:00<00:00, 7022.59it/s] 47%|████▋     | 1420/3000 [00:00<00:00, 7104.48it/s] 71%|███████▏  | 2139/3000 [00:00<00:00, 7140.54it/s] 95%|█████████▌| 2854/3000 [00:00<00:00, 7042.75it/s]100%|██████████| 3000/3000 [00:00<00:00, 6992.29it/s]
2022-05-23 05:50:43 - loading data from datasets/MNIST_3000/test.json
  0%|          | 0/10000 [00:00<?, ?it/s]  6%|▋         | 631/10000 [00:00<00:01, 6305.50it/s] 13%|█▎        | 1288/10000 [00:00<00:01, 6460.11it/s] 19%|█▉        | 1935/10000 [00:00<00:01, 6276.80it/s] 26%|██▋       | 2649/10000 [00:00<00:01, 6610.54it/s] 33%|███▎      | 3327/10000 [00:00<00:01, 6670.38it/s] 40%|████      | 4003/10000 [00:00<00:00, 6699.91it/s] 47%|████▋     | 4703/10000 [00:00<00:00, 6796.45it/s] 54%|█████▍    | 5430/10000 [00:00<00:00, 6945.85it/s] 61%|██████▏   | 6125/10000 [00:00<00:00, 6881.21it/s] 68%|██████▊   | 6834/10000 [00:01<00:00, 6942.72it/s] 75%|███████▌  | 7543/10000 [00:01<00:00, 6986.93it/s] 82%|████████▏ | 8242/10000 [00:01<00:00, 6952.22it/s] 89%|████████▉ | 8949/10000 [00:01<00:00, 6987.17it/s] 97%|█████████▋| 9686/10000 [00:01<00:00, 7099.43it/s]100%|██████████| 10000/10000 [00:01<00:00, 6862.23it/s]
2022-05-23 05:50:47 - Using LF classes: [functools.partial(<class 'sklearn.tree._classes.DecisionTreeClassifier'>, max_depth=1), <class 'sklearn.linear_model._logistic.LogisticRegression'>]
Fitting MulticlassAdaptor... Class 0
  0%|          | 0/23 [00:00<?, ?it/s]  0%|          | 0/23 [00:46<?, ?it/s]
Fitting MulticlassAdaptor... Class 1
  0%|          | 0/23 [00:00<?, ?it/s]  4%|▍         | 1/23 [00:46<17:01, 46.43s/it]  9%|▊         | 2/23 [01:32<16:11, 46.25s/it] 13%|█▎        | 3/23 [02:18<15:21, 46.07s/it] 17%|█▋        | 4/23 [03:06<14:52, 46.95s/it] 22%|██▏       | 5/23 [03:53<14:03, 46.84s/it] 26%|██▌       | 6/23 [04:40<13:19, 47.00s/it] 30%|███       | 7/23 [05:27<12:28, 46.80s/it] 35%|███▍      | 8/23 [06:14<11:44, 46.96s/it] 39%|███▉      | 9/23 [07:02<11:01, 47.25s/it] 43%|████▎     | 10/23 [07:49<10:14, 47.26s/it] 48%|████▊     | 11/23 [08:37<09:28, 47.41s/it] 52%|█████▏    | 12/23 [09:24<08:41, 47.37s/it] 57%|█████▋    | 13/23 [10:11<07:53, 47.34s/it] 61%|██████    | 14/23 [10:58<07:04, 47.22s/it] 65%|██████▌   | 15/23 [11:46<06:18, 47.27s/it] 70%|██████▉   | 16/23 [12:33<05:31, 47.38s/it] 74%|███████▍  | 17/23 [13:21<04:45, 47.55s/it] 78%|███████▊  | 18/23 [14:09<03:58, 47.75s/it] 78%|███████▊  | 18/23 [14:10<03:56, 47.23s/it]
Traceback (most recent call last):
  File "fwrench/applications/mnist.py", line 214, in <module>
    fire.Fire(main)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 141, in Fire
    component_trace = _Fire(component, args, parsed_flag_args, context, name)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 471, in _Fire
    target=component.__name__)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 681, in _CallAndUpdateTrace
    component = fn(*varargs, **kwargs)
  File "fwrench/applications/mnist.py", line 155, in main
    selector.fit(valid_data_embed, train_data_embed)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/utils/utils.py", line 132, in fit
    self.lf_selectors[i].fit(labeled_data_i, unlabeled_data_i)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba_lf_selector.py", line 62, in fit
    model=self.lf_generator, scoring_fn=self.scoring_fn)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 150, in run_synthesizer
    model, max_cardinality, combo_samples)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/synthesizer.py", line 151, in generate_heuristics
    heuristics.append(self.fit_function(combo, classifier))
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/synthesizer.py", line 129, in fit_function
    clf.fit(Xtmp, ytmp)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/sklearn/tree/_classes.py", line 907, in fit
    X_idx_sorted=X_idx_sorted)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/sklearn/tree/_classes.py", line 283, in fit
    "number of samples=%d" % (len(y), n_samples))
ValueError: Number of labels=2 does not match number of samples=3
Traceback (most recent call last):
  File "fwrench/applications/mnist.py", line 25, in <module>
    from fwrench.datasets import MNISTDataset
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/datasets/__init__.py", line 1, in <module>
    from .dataset import FWRENCHDataset
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/datasets/dataset.py", line 8, in <module>
    from numpy.typing import NDArray
ImportError: cannot import name 'NDArray' from 'numpy.typing' (/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/numpy/typing/__init__.py)
Traceback (most recent call last):
  File "fwrench/applications/mnist.py", line 25, in <module>
    from fwrench.datasets import MNISTDataset
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/datasets/__init__.py", line 1, in <module>
    from .dataset import FWRENCHDataset
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/datasets/dataset.py", line 8, in <module>
    from numpy.typing import NDArray
ImportError: cannot import name 'NDArray' from 'numpy.typing' (/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/numpy/typing/__init__.py)
Dataset MNIST
    Number of datapoints: 60000
    Root location: /hdd2/nick/github.com/Kaylee0501/FWRENCH/datasets/torchvision_untransformed/MNIST
    Split: Train
Dataset MNIST
    Number of datapoints: 60000
    Root location: /hdd2/nick/github.com/Kaylee0501/FWRENCH/datasets/torchvision_untransformed/MNIST
    Split: Train
Dataset MNIST
    Number of datapoints: 60000
    Root location: /hdd2/nick/github.com/Kaylee0501/FWRENCH/datasets/torchvision_untransformed/MNIST
    Split: Train
2022-05-23 17:32:53 - loading data from datasets/MNIST_3000/train.json
  0%|          | 0/57000 [00:00<?, ?it/s]  1%|          | 618/57000 [00:00<00:09, 6171.65it/s]  2%|▏         | 1236/57000 [00:00<00:09, 6134.54it/s]  3%|▎         | 1850/57000 [00:00<00:09, 6116.47it/s]  4%|▍         | 2462/57000 [00:00<00:08, 6105.35it/s]  5%|▌         | 3073/57000 [00:00<00:08, 6081.20it/s]  6%|▋         | 3687/57000 [00:00<00:08, 6098.76it/s]  8%|▊         | 4297/57000 [00:00<00:08, 6057.46it/s]  9%|▊         | 4910/57000 [00:00<00:08, 6079.42it/s] 10%|▉         | 5525/57000 [00:00<00:08, 6100.78it/s] 11%|█         | 6136/57000 [00:01<00:08, 6100.10it/s] 12%|█▏        | 6764/57000 [00:01<00:08, 6153.89it/s] 13%|█▎        | 7396/57000 [00:01<00:07, 6203.09it/s] 14%|█▍        | 8017/57000 [00:01<00:08, 6120.61it/s] 15%|█▌        | 8630/57000 [00:01<00:07, 6057.99it/s] 16%|█▌        | 9237/57000 [00:01<00:08, 5939.03it/s] 17%|█▋        | 9908/57000 [00:01<00:07, 6165.22it/s] 19%|█▊        | 10567/57000 [00:01<00:07, 6289.07it/s] 20%|█▉        | 11245/57000 [00:01<00:07, 6433.29it/s] 21%|██        | 11896/57000 [00:01<00:06, 6452.83it/s] 22%|██▏       | 12542/57000 [00:02<00:07, 5726.00it/s] 23%|██▎       | 13130/57000 [00:02<00:08, 5332.90it/s] 24%|██▍       | 13678/57000 [00:02<00:08, 5093.36it/s] 25%|██▍       | 14198/57000 [00:02<00:08, 4924.41it/s] 26%|██▌       | 14698/57000 [00:02<00:08, 4806.36it/s] 27%|██▋       | 15183/57000 [00:02<00:08, 4726.80it/s] 27%|██▋       | 15659/57000 [00:02<00:08, 4673.05it/s] 28%|██▊       | 16128/57000 [00:02<00:08, 4623.95it/s] 29%|██▉       | 16592/57000 [00:02<00:08, 4599.47it/s] 30%|██▉       | 17053/57000 [00:03<00:08, 4582.56it/s] 31%|███       | 17512/57000 [00:03<00:08, 4572.14it/s] 32%|███▏      | 17970/57000 [00:03<00:08, 4567.72it/s] 32%|███▏      | 18427/57000 [00:03<00:08, 4559.02it/s] 33%|███▎      | 18883/57000 [00:03<00:08, 4551.82it/s] 34%|███▍      | 19339/57000 [00:03<00:08, 4546.55it/s] 35%|███▍      | 19794/57000 [00:03<00:08, 4536.03it/s] 36%|███▌      | 20251/57000 [00:03<00:08, 4545.66it/s] 36%|███▋      | 20706/57000 [00:03<00:07, 4539.78it/s] 37%|███▋      | 21160/57000 [00:03<00:07, 4537.09it/s] 38%|███▊      | 21614/57000 [00:04<00:07, 4532.68it/s] 39%|███▊      | 22069/57000 [00:04<00:07, 4535.44it/s] 40%|███▉      | 22523/57000 [00:04<00:07, 4535.53it/s] 40%|████      | 22981/57000 [00:04<00:07, 4546.93it/s] 41%|████      | 23438/57000 [00:04<00:07, 4551.76it/s] 42%|████▏     | 23897/57000 [00:04<00:07, 4560.70it/s] 43%|████▎     | 24354/57000 [00:04<00:07, 4562.91it/s] 44%|████▎     | 24811/57000 [00:04<00:07, 4564.65it/s] 44%|████▍     | 25352/57000 [00:04<00:06, 4816.67it/s] 46%|████▌     | 26006/57000 [00:04<00:05, 5332.49it/s] 47%|████▋     | 26540/57000 [00:05<00:06, 4860.56it/s] 47%|████▋     | 27035/57000 [00:05<00:06, 4587.03it/s] 48%|████▊     | 27502/57000 [00:05<00:06, 4411.23it/s] 49%|████▉     | 27949/57000 [00:05<00:06, 4288.73it/s] 50%|████▉     | 28382/57000 [00:05<00:06, 4206.43it/s] 51%|█████     | 28805/57000 [00:05<00:06, 4147.47it/s] 51%|█████▏    | 29332/57000 [00:05<00:06, 4461.41it/s] 53%|█████▎    | 29929/57000 [00:05<00:05, 4891.07it/s] 54%|█████▎    | 30523/57000 [00:05<00:05, 5194.65it/s] 55%|█████▍    | 31116/57000 [00:06<00:04, 5409.76it/s] 56%|█████▌    | 31707/57000 [00:06<00:04, 5555.52it/s] 57%|█████▋    | 32299/57000 [00:06<00:04, 5660.86it/s] 58%|█████▊    | 32894/57000 [00:06<00:04, 5746.51it/s] 59%|█████▉    | 33488/57000 [00:06<00:04, 5803.70it/s] 60%|█████▉    | 34081/57000 [00:06<00:03, 5839.90it/s] 61%|██████    | 34673/57000 [00:06<00:03, 5862.38it/s] 62%|██████▏   | 35262/57000 [00:06<00:03, 5870.43it/s] 63%|██████▎   | 35854/57000 [00:06<00:03, 5884.53it/s] 64%|██████▍   | 36445/57000 [00:06<00:03, 5890.48it/s] 65%|██████▍   | 37036/57000 [00:07<00:03, 5896.24it/s] 66%|██████▌   | 37628/57000 [00:07<00:03, 5901.56it/s] 67%|██████▋   | 38222/57000 [00:07<00:03, 5910.07it/s] 68%|██████▊   | 38816/57000 [00:07<00:03, 5916.57it/s] 69%|██████▉   | 39412/57000 [00:07<00:02, 5925.90it/s] 70%|███████   | 40010/57000 [00:07<00:02, 5939.51it/s] 71%|███████▏  | 40681/57000 [00:07<00:02, 6168.80it/s] 73%|███████▎  | 41361/57000 [00:07<00:02, 6356.44it/s] 74%|███████▎  | 42008/57000 [00:07<00:02, 6389.13it/s] 75%|███████▍  | 42655/57000 [00:07<00:02, 6411.61it/s] 76%|███████▌  | 43330/57000 [00:08<00:02, 6511.67it/s] 77%|███████▋  | 44023/57000 [00:08<00:01, 6634.96it/s] 78%|███████▊  | 44730/57000 [00:08<00:01, 6764.55it/s] 80%|███████▉  | 45423/57000 [00:08<00:01, 6813.30it/s] 81%|████████  | 46105/57000 [00:08<00:01, 6778.02it/s] 82%|████████▏ | 46783/57000 [00:08<00:01, 6483.83it/s] 83%|████████▎ | 47435/57000 [00:08<00:01, 6351.28it/s] 84%|████████▍ | 48094/57000 [00:08<00:01, 6416.58it/s] 86%|████████▌ | 48738/57000 [00:08<00:01, 5461.08it/s] 87%|████████▋ | 49309/57000 [00:09<00:01, 4975.40it/s] 87%|████████▋ | 49829/57000 [00:09<00:01, 4885.65it/s] 88%|████████▊ | 50396/57000 [00:09<00:01, 5087.54it/s] 89%|████████▉ | 50995/57000 [00:09<00:01, 5330.11it/s] 91%|█████████ | 51626/57000 [00:09<00:00, 5601.39it/s] 92%|█████████▏| 52329/57000 [00:09<00:00, 6007.15it/s] 93%|█████████▎| 52940/57000 [00:09<00:00, 5982.60it/s] 94%|█████████▍| 53588/57000 [00:09<00:00, 6125.41it/s] 95%|█████████▌| 54206/57000 [00:09<00:00, 6061.36it/s] 96%|█████████▌| 54816/57000 [00:10<00:00, 5959.00it/s] 97%|█████████▋| 55450/57000 [00:10<00:00, 6067.61it/s] 98%|█████████▊| 56060/57000 [00:10<00:00, 6044.78it/s] 99%|█████████▉| 56667/57000 [00:10<00:00, 6030.51it/s]100%|██████████| 57000/57000 [00:10<00:00, 5491.27it/s]
2022-05-23 17:33:03 - loading data from datasets/MNIST_3000/valid.json
  0%|          | 0/3000 [00:00<?, ?it/s] 20%|█▉        | 596/3000 [00:00<00:00, 5955.14it/s] 40%|███▉      | 1197/3000 [00:00<00:00, 5983.97it/s] 60%|█████▉    | 1799/3000 [00:00<00:00, 5997.27it/s] 80%|███████▉  | 2399/3000 [00:00<00:00, 5980.50it/s]100%|█████████▉| 2998/3000 [00:00<00:00, 5949.43it/s]100%|██████████| 3000/3000 [00:00<00:00, 5962.41it/s]
2022-05-23 17:33:04 - loading data from datasets/MNIST_3000/test.json
  0%|          | 0/10000 [00:00<?, ?it/s]  6%|▌         | 591/10000 [00:00<00:01, 5900.73it/s] 12%|█▏        | 1182/10000 [00:00<00:01, 5894.11it/s] 18%|█▊        | 1795/10000 [00:00<00:01, 5999.63it/s] 25%|██▍       | 2499/10000 [00:00<00:01, 6406.80it/s] 32%|███▏      | 3201/10000 [00:00<00:01, 6624.12it/s] 39%|███▊      | 3864/10000 [00:00<00:00, 6534.34it/s] 45%|████▌     | 4518/10000 [00:00<00:00, 6485.38it/s] 52%|█████▏    | 5167/10000 [00:00<00:00, 6437.26it/s] 58%|█████▊    | 5833/10000 [00:00<00:00, 6503.98it/s] 65%|██████▍   | 6498/10000 [00:01<00:00, 6548.34it/s] 72%|███████▏  | 7190/10000 [00:01<00:00, 6659.18it/s] 79%|███████▊  | 7869/10000 [00:01<00:00, 6696.15it/s] 85%|████████▌ | 8539/10000 [00:01<00:00, 6546.23it/s] 92%|█████████▏| 9195/10000 [00:01<00:00, 6416.23it/s] 98%|█████████▊| 9838/10000 [00:01<00:00, 6264.87it/s]100%|██████████| 10000/10000 [00:01<00:00, 6406.92it/s]
2022-05-23 17:33:09 - Using LF classes: [functools.partial(<class 'sklearn.tree._classes.DecisionTreeClassifier'>, max_depth=1), <class 'sklearn.linear_model._logistic.LogisticRegression'>]
Fitting MulticlassAdaptor... Class 0
  0%|          | 0/23 [00:00<?, ?it/s]  0%|          | 0/23 [00:51<?, ?it/s]