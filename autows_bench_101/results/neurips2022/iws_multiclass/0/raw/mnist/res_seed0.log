/hdd2/kaylee/anaconda3/envs/AutoWS-Bench-101/lib/python3.7/site-packages/torchvision/datasets/mnist.py:498: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1631630836880/work/torch/csrc/utils/tensor_numpy.cpp:180.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
2022-08-09 04:46:32 - loading data from datasets/MNIST_3000/train.json
  0%|          | 0/57000 [00:00<?, ?it/s]  1%|▏         | 746/57000 [00:00<00:07, 7455.47it/s]  3%|▎         | 1506/57000 [00:00<00:07, 7536.24it/s]  4%|▍         | 2260/57000 [00:00<00:07, 7513.66it/s]  5%|▌         | 3014/57000 [00:00<00:07, 7520.34it/s]  7%|▋         | 3778/57000 [00:00<00:07, 7560.46it/s]  8%|▊         | 4535/57000 [00:00<00:06, 7550.71it/s]  9%|▉         | 5296/57000 [00:00<00:06, 7569.92it/s] 11%|█         | 6056/57000 [00:00<00:06, 7577.84it/s] 12%|█▏        | 6815/57000 [00:00<00:06, 7578.63it/s] 13%|█▎        | 7573/57000 [00:01<00:06, 7280.36it/s] 15%|█▍        | 8335/57000 [00:01<00:06, 7380.07it/s] 16%|█▌        | 9104/57000 [00:01<00:06, 7470.80it/s] 17%|█▋        | 9878/57000 [00:01<00:06, 7550.15it/s] 19%|█▊        | 10635/57000 [00:01<00:06, 7371.61it/s] 20%|█▉        | 11374/57000 [00:01<00:06, 7343.46it/s] 21%|██        | 12110/57000 [00:01<00:06, 7339.67it/s] 23%|██▎       | 12845/57000 [00:01<00:06, 7327.27it/s] 24%|██▍       | 13579/57000 [00:01<00:05, 7329.07it/s] 25%|██▌       | 14313/57000 [00:01<00:05, 7325.67it/s] 26%|██▋       | 15046/57000 [00:02<00:05, 7294.10it/s] 28%|██▊       | 15796/57000 [00:02<00:05, 7352.57it/s] 29%|██▉       | 16546/57000 [00:02<00:05, 7393.94it/s] 30%|███       | 17317/57000 [00:02<00:05, 7486.51it/s] 32%|███▏      | 18076/57000 [00:02<00:05, 7517.16it/s] 33%|███▎      | 18832/57000 [00:02<00:05, 7528.21it/s] 34%|███▍      | 19586/57000 [00:02<00:04, 7530.12it/s] 36%|███▌      | 20342/57000 [00:02<00:04, 7537.79it/s] 37%|███▋      | 21113/57000 [00:02<00:04, 7588.53it/s] 38%|███▊      | 21883/57000 [00:02<00:04, 7620.68it/s] 40%|███▉      | 22646/57000 [00:03<00:04, 7617.53it/s] 41%|████      | 23419/57000 [00:03<00:04, 7649.59it/s] 42%|████▏     | 24184/57000 [00:03<00:04, 7608.71it/s] 44%|████▍     | 24945/57000 [00:03<00:04, 7578.97it/s] 45%|████▌     | 25707/57000 [00:03<00:04, 7590.12it/s] 46%|████▋     | 26467/57000 [00:03<00:04, 7531.31it/s] 48%|████▊     | 27221/57000 [00:03<00:03, 7496.57it/s] 49%|████▉     | 27974/57000 [00:03<00:03, 7504.17it/s] 50%|█████     | 28725/57000 [00:03<00:03, 7402.12it/s] 52%|█████▏    | 29473/57000 [00:03<00:03, 7423.21it/s] 53%|█████▎    | 30218/57000 [00:04<00:03, 7428.52it/s] 54%|█████▍    | 30964/57000 [00:04<00:03, 7437.28it/s] 56%|█████▌    | 31710/57000 [00:04<00:03, 7443.32it/s] 57%|█████▋    | 32461/57000 [00:04<00:03, 7461.81it/s] 58%|█████▊    | 33216/57000 [00:04<00:03, 7485.67it/s] 60%|█████▉    | 33965/57000 [00:04<00:03, 7485.31it/s] 61%|██████    | 34714/57000 [00:04<00:03, 7210.35it/s] 62%|██████▏   | 35442/57000 [00:04<00:02, 7228.78it/s] 63%|██████▎   | 36167/57000 [00:04<00:02, 7200.11it/s] 65%|██████▍   | 36919/57000 [00:04<00:02, 7292.60it/s] 66%|██████▌   | 37652/57000 [00:05<00:02, 7301.44it/s] 67%|██████▋   | 38387/57000 [00:05<00:02, 7315.38it/s] 69%|██████▊   | 39137/57000 [00:05<00:02, 7368.48it/s] 70%|██████▉   | 39893/57000 [00:05<00:02, 7423.50it/s] 71%|███████▏  | 40651/57000 [00:05<00:02, 7470.01it/s] 73%|███████▎  | 41399/57000 [00:05<00:02, 7457.25it/s] 74%|███████▍  | 42145/57000 [00:05<00:02, 7420.87it/s] 75%|███████▌  | 42899/57000 [00:05<00:01, 7453.63it/s] 77%|███████▋  | 43656/57000 [00:05<00:01, 7485.62it/s] 78%|███████▊  | 44420/57000 [00:05<00:01, 7531.11it/s] 79%|███████▉  | 45174/57000 [00:06<00:01, 7510.39it/s] 81%|████████  | 45926/57000 [00:06<00:01, 7501.63it/s] 82%|████████▏ | 46682/57000 [00:06<00:01, 7518.13it/s] 83%|████████▎ | 47435/57000 [00:06<00:01, 7521.23it/s] 85%|████████▍ | 48189/57000 [00:06<00:01, 7526.35it/s] 86%|████████▌ | 48944/57000 [00:06<00:01, 7532.49it/s] 87%|████████▋ | 49700/57000 [00:06<00:00, 7538.48it/s] 89%|████████▊ | 50454/57000 [00:06<00:00, 7537.84it/s] 90%|████████▉ | 51208/57000 [00:06<00:00, 7465.85it/s] 91%|█████████ | 51955/57000 [00:06<00:00, 7429.12it/s] 92%|█████████▏| 52712/57000 [00:07<00:00, 7468.56it/s] 94%|█████████▍| 53459/57000 [00:07<00:00, 7414.37it/s] 95%|█████████▌| 54210/57000 [00:07<00:00, 7441.62it/s] 96%|█████████▋| 54963/57000 [00:07<00:00, 7467.12it/s] 98%|█████████▊| 55714/57000 [00:07<00:00, 7479.60it/s] 99%|█████████▉| 56475/57000 [00:07<00:00, 7515.75it/s]100%|██████████| 57000/57000 [00:07<00:00, 7461.17it/s]
2022-08-09 04:46:40 - loading data from datasets/MNIST_3000/valid.json
  0%|          | 0/3000 [00:00<?, ?it/s] 25%|██▌       | 755/3000 [00:00<00:00, 7540.34it/s] 50%|█████     | 1510/3000 [00:00<00:00, 7537.96it/s] 75%|███████▌  | 2264/3000 [00:00<00:00, 7445.28it/s]100%|██████████| 3000/3000 [00:00<00:00, 7457.94it/s]
2022-08-09 04:46:40 - loading data from datasets/MNIST_3000/test.json
  0%|          | 0/10000 [00:00<?, ?it/s]  7%|▋         | 745/10000 [00:00<00:01, 7449.62it/s] 15%|█▍        | 1498/10000 [00:00<00:01, 7493.09it/s] 22%|██▏       | 2248/10000 [00:00<00:01, 7456.38it/s] 30%|██▉       | 2994/10000 [00:00<00:00, 7369.62it/s] 37%|███▋      | 3749/10000 [00:00<00:00, 7432.47it/s] 45%|████▍     | 4496/10000 [00:00<00:00, 7443.14it/s] 52%|█████▏    | 5241/10000 [00:00<00:00, 7431.49it/s] 60%|█████▉    | 5993/10000 [00:00<00:00, 7458.95it/s] 67%|██████▋   | 6739/10000 [00:00<00:00, 7350.34it/s] 75%|███████▍  | 7475/10000 [00:01<00:00, 7301.14it/s] 82%|████████▏ | 8206/10000 [00:01<00:00, 7303.57it/s] 90%|████████▉ | 8952/10000 [00:01<00:00, 7350.10it/s] 97%|█████████▋| 9688/10000 [00:01<00:00, 7333.15it/s]100%|██████████| 10000/10000 [00:01<00:00, 7380.72it/s]2022-08-09 04:46:44 - Using LF classes: [functools.partial(<class 'sklearn.tree._classes.DecisionTreeClassifier'>, max_depth=1), <class 'sklearn.linear_model._logistic.LogisticRegression'>]
|----------------------------------------------------------------------------------------------------|0.0% 0/20|█████-----------------------------------------------------------------------------------------------|5.0% 1/20|██████████------------------------------------------------------------------------------------------|10.0% 2/20|███████████████-------------------------------------------------------------------------------------|15.0% 3/20|----------------------------------------------------------------------------------------------------|0.0% 0/20|█████-----------------------------------------------------------------------------------------------|5.0% 1/20|██████████------------------------------------------------------------------------------------------|10.0% 2/20|███████████████-------------------------------------------------------------------------------------|15.0% 3/20|████████████████████--------------------------------------------------------------------------------|20.0% 4/20|█████████████████████████---------------------------------------------------------------------------|25.0% 5/20|██████████████████████████████----------------------------------------------------------------------|30.0% 6/20|███████████████████████████████████-----------------------------------------------------------------|35.0% 7/20|████████████████████████████████████████------------------------------------------------------------|40.0% 8/20|█████████████████████████████████████████████-------------------------------------------------------|45.0% 9/20|██████████████████████████████████████████████████--------------------------------------------------|50.0% 10/20|███████████████████████████████████████████████████████---------------------------------------------|55.0% 11/20|████████████████████████████████████████████████████████████----------------------------------------|60.0% 12/20|█████████████████████████████████████████████████████████████████-----------------------------------|65.0% 13/20|██████████████████████████████████████████████████████████████████████------------------------------|70.0% 14/20|███████████████████████████████████████████████████████████████████████████-------------------------|75.0% 15/20|████████████████████████████████████████████████████████████████████████████████--------------------|80.0% 16/20|█████████████████████████████████████████████████████████████████████████████████████---------------|85.0% 17/20|██████████████████████████████████████████████████████████████████████████████████████████----------|90.0% 18/20|███████████████████████████████████████████████████████████████████████████████████████████████-----|95.0% 19/20|████████████████████████████████████████████████████████████████████████████████████████████████████|100.0% 20/20

/hdd2/kaylee/AutoWS-Bench-101/fwrench/lf_selectors/interactive_multiclass/iws.py:152: SparseEfficiencyWarning: Comparing a sparse matrix with a nonzero scalar using != is inefficient, try using == instead.
  accuracy = evaluate_complex_multiclass(LFs, Ytrue, scoring_fn)
/hdd2/kaylee/AutoWS-Bench-101/fwrench/lf_selectors/interactive_multiclass/utils.py:635: RuntimeWarning: invalid value encountered in true_divide
  accuracy = (tp) / numvotes
[709, 79, 708, 711, 680, 106, 77, 78, 211, 691, 1476, 690, 719, 717, 712, 679, 651, 622, 707, 594, 621, 738, 720, 692, 1474, 593, 595, 565, 105, 710, 718, 650, 103, 1475, 104, 662, 108, 107, 80, 161, 182, 552, 341]
  0%|          | 0/100 [00:00<?, ?epoch/s] 21%|██        | 21/100 [00:00<00:00, 209.11epoch/s] 56%|█████▌    | 56/100 [00:00<00:00, 289.82epoch/s] 94%|█████████▍| 94/100 [00:00<00:00, 328.05epoch/s]100%|██████████| 100/100 [00:00<00:00, 313.24epoch/s]
2022-08-09 04:48:45 - [0.         0.         0.         0.         0.69239858 0.63943424
 0.29737903 0.51291767 0.         0.52211538]
2022-08-09 04:48:45 - [train] accuracy: 0.2749, coverage: 0.8563
2022-08-09 04:48:45 - [0.         0.         0.         0.         0.75       1.
 0.75       0.5        0.         0.69230769]
2022-08-09 04:48:45 - [valid] accuracy: 0.4390, coverage: 0.8200
2022-08-09 04:48:45 - [0.         0.         0.         0.         0.70750552 0.62246117
 0.19770774 0.48237664 0.         0.58525853]
2022-08-09 04:48:45 - [test] accuracy: 0.2722, coverage: 0.8491
2022-08-09 04:48:45 - label model train acc:    0.27217053350606524
2022-08-09 04:48:45 - label model coverage:     0.8491
0.27217053350606524
