/home/ubuntu/anaconda3/envs/FWRENCH2/lib/python3.7/site-packages/torchvision/datasets/mnist.py:498: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1631630836880/work/torch/csrc/utils/tensor_numpy.cpp:180.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
/home/ubuntu/anaconda3/envs/FWRENCH2/lib/python3.7/site-packages/torchvision/datasets/mnist.py:62: UserWarning: train_data has been renamed data
  warnings.warn("train_data has been renamed data")
/home/ubuntu/anaconda3/envs/FWRENCH2/lib/python3.7/site-packages/torchvision/datasets/mnist.py:52: UserWarning: train_labels has been renamed targets
  warnings.warn("train_labels has been renamed targets")
/home/ubuntu/anaconda3/envs/FWRENCH2/lib/python3.7/site-packages/torchvision/datasets/mnist.py:67: UserWarning: test_data has been renamed data
  warnings.warn("test_data has been renamed data")
/home/ubuntu/anaconda3/envs/FWRENCH2/lib/python3.7/site-packages/torchvision/datasets/mnist.py:57: UserWarning: test_labels has been renamed targets
  warnings.warn("test_labels has been renamed targets")
getting mnist data
projecting train data set
500/600001000/600001500/600002000/600002500/600003000/600003500/600004000/600004500/600005000/600005500/600006000/600006500/600007000/600007500/600008000/600008500/600009000/600009500/6000010000/6000010500/6000011000/6000011500/6000012000/6000012500/6000013000/6000013500/6000014000/6000014500/6000015000/6000015500/6000016000/6000016500/6000017000/6000017500/6000018000/6000018500/6000019000/6000019500/6000020000/6000020500/6000021000/6000021500/6000022000/6000022500/6000023000/6000023500/6000024000/6000024500/6000025000/6000025500/6000026000/6000026500/6000027000/6000027500/6000028000/6000028500/6000029000/6000029500/6000030000/6000030500/6000031000/6000031500/6000032000/6000032500/6000033000/6000033500/6000034000/6000034500/6000035000/6000035500/6000036000/6000036500/6000037000/6000037500/6000038000/6000038500/6000039000/6000039500/6000040000/6000040500/6000041000/6000041500/6000042000/6000042500/6000043000/6000043500/6000044000/6000044500/6000045000/6000045500/6000046000/6000046500/6000047000/6000047500/6000048000/6000048500/6000049000/6000049500/6000050000/6000050500/6000051000/6000051500/6000052000/6000052500/6000053000/6000053500/6000054000/6000054500/6000055000/6000055500/6000056000/6000056500/6000057000/6000057500/6000058000/6000058500/6000059000/6000059500/6000060000/60000
projecting test data set
500/100001000/100001500/100002000/100002500/100003000/100003500/100004000/100004500/100005000/100005500/100006000/100006500/100007000/100007500/100008000/100008500/100009000/100009500/1000010000/10000
writing pickle
done
getting mnist data
projecting train data set
500/600001000/600001500/600002000/600002500/600003000/600003500/600004000/600004500/600005000/600005500/600006000/600006500/600007000/600007500/600008000/600008500/600009000/600009500/6000010000/6000010500/6000011000/6000011500/6000012000/6000012500/6000013000/6000013500/6000014000/6000014500/6000015000/6000015500/6000016000/6000016500/6000017000/6000017500/6000018000/6000018500/6000019000/6000019500/6000020000/6000020500/6000021000/6000021500/6000022000/6000022500/6000023000/6000023500/6000024000/6000024500/6000025000/6000025500/6000026000/6000026500/6000027000/6000027500/6000028000/6000028500/6000029000/6000029500/6000030000/6000030500/6000031000/6000031500/6000032000/6000032500/6000033000/6000033500/6000034000/6000034500/6000035000/6000035500/6000036000/6000036500/6000037000/6000037500/6000038000/6000038500/6000039000/6000039500/6000040000/6000040500/6000041000/6000041500/6000042000/6000042500/6000043000/6000043500/6000044000/6000044500/6000045000/6000045500/6000046000/6000046500/6000047000/6000047500/6000048000/6000048500/6000049000/6000049500/6000050000/6000050500/6000051000/6000051500/6000052000/6000052500/6000053000/6000053500/6000054000/6000054500/6000055000/6000055500/6000056000/6000056500/6000057000/6000057500/6000058000/6000058500/6000059000/6000059500/6000060000/60000
projecting test data set
500/100001000/100001500/100002000/100002500/100003000/100003500/100004000/100004500/100005000/100005500/100006000/100006500/100007000/100007500/100008000/100008500/100009000/100009500/1000010000/10000
writing pickle
done
getting mnist data
projecting train data set
500/600001000/600001500/600002000/600002500/600003000/600003500/600004000/600004500/600005000/600005500/600006000/600006500/600007000/600007500/600008000/600008500/600009000/600009500/6000010000/6000010500/6000011000/6000011500/6000012000/6000012500/6000013000/6000013500/6000014000/6000014500/6000015000/6000015500/6000016000/6000016500/6000017000/6000017500/6000018000/6000018500/6000019000/6000019500/6000020000/6000020500/6000021000/6000021500/6000022000/6000022500/6000023000/6000023500/6000024000/6000024500/6000025000/6000025500/6000026000/6000026500/6000027000/6000027500/6000028000/6000028500/6000029000/6000029500/6000030000/6000030500/6000031000/6000031500/6000032000/6000032500/6000033000/6000033500/6000034000/6000034500/6000035000/6000035500/6000036000/6000036500/6000037000/6000037500/6000038000/6000038500/6000039000/6000039500/6000040000/6000040500/6000041000/6000041500/6000042000/6000042500/6000043000/6000043500/6000044000/6000044500/6000045000/6000045500/6000046000/6000046500/6000047000/6000047500/6000048000/6000048500/6000049000/6000049500/6000050000/6000050500/6000051000/6000051500/6000052000/6000052500/6000053000/6000053500/6000054000/6000054500/6000055000/6000055500/6000056000/6000056500/6000057000/6000057500/6000058000/6000058500/6000059000/6000059500/6000060000/60000
projecting test data set
500/100001000/100001500/100002000/100002500/100003000/100003500/100004000/100004500/100005000/100005500/100006000/100006500/100007000/100007500/100008000/100008500/100009000/100009500/1000010000/10000
writing pickle
done
2022-06-05 20:51:12 - loading data from datasets/SphericalMNIST_3000/train.json
  0%|          | 0/57000 [00:00<?, ?it/s]  1%|          | 400/57000 [00:00<00:14, 3989.75it/s]  1%|▏         | 808/57000 [00:00<00:13, 4040.35it/s]  2%|▏         | 1220/57000 [00:00<00:13, 4075.96it/s]  3%|▎         | 1628/57000 [00:00<00:13, 4060.22it/s]  4%|▎         | 2040/57000 [00:00<00:13, 4080.45it/s]  4%|▍         | 2449/57000 [00:00<00:13, 4050.80it/s]  5%|▌         | 2855/57000 [00:00<00:13, 4023.20it/s]  6%|▌         | 3258/57000 [00:00<00:13, 3994.51it/s]  6%|▋         | 3658/57000 [00:00<00:13, 3977.68it/s]  7%|▋         | 4056/57000 [00:01<00:13, 3964.80it/s]  8%|▊         | 4453/57000 [00:01<00:13, 3958.11it/s]  9%|▊         | 4849/57000 [00:01<00:13, 3951.27it/s]  9%|▉         | 5245/57000 [00:01<00:13, 3949.49it/s] 10%|▉         | 5640/57000 [00:01<00:13, 3936.98it/s] 11%|█         | 6036/57000 [00:01<00:12, 3942.49it/s] 11%|█▏        | 6431/57000 [00:01<00:12, 3944.31it/s] 12%|█▏        | 6827/57000 [00:01<00:12, 3946.57it/s] 13%|█▎        | 7224/57000 [00:01<00:12, 3951.35it/s] 13%|█▎        | 7621/57000 [00:01<00:12, 3955.86it/s] 14%|█▍        | 8017/57000 [00:02<00:12, 3950.34it/s] 15%|█▍        | 8413/57000 [00:02<00:12, 3945.90it/s] 15%|█▌        | 8808/57000 [00:02<00:12, 3945.27it/s] 16%|█▌        | 9203/57000 [00:02<00:12, 3938.61it/s] 17%|█▋        | 9598/57000 [00:02<00:12, 3941.36it/s] 18%|█▊        | 9993/57000 [00:02<00:11, 3942.73it/s] 18%|█▊        | 10388/57000 [00:02<00:11, 3944.86it/s] 19%|█▉        | 10783/57000 [00:02<00:11, 3946.21it/s] 20%|█▉        | 11179/57000 [00:02<00:11, 3947.50it/s] 20%|██        | 11574/57000 [00:02<00:11, 3947.66it/s] 21%|██        | 11970/57000 [00:03<00:11, 3950.50it/s] 22%|██▏       | 12366/57000 [00:03<00:11, 3952.10it/s] 22%|██▏       | 12762/57000 [00:03<00:11, 3927.59it/s] 23%|██▎       | 13158/57000 [00:03<00:11, 3936.46it/s] 24%|██▍       | 13555/57000 [00:03<00:11, 3946.06it/s] 24%|██▍       | 13952/57000 [00:03<00:10, 3951.82it/s] 25%|██▌       | 14349/57000 [00:03<00:10, 3954.50it/s] 26%|██▌       | 14746/57000 [00:03<00:10, 3959.07it/s] 27%|██▋       | 15142/57000 [00:03<00:10, 3958.76it/s] 27%|██▋       | 15540/57000 [00:03<00:10, 3962.70it/s] 28%|██▊       | 15937/57000 [00:04<00:10, 3963.23it/s] 29%|██▊       | 16334/57000 [00:04<00:10, 3947.46it/s] 29%|██▉       | 16731/57000 [00:04<00:10, 3953.96it/s] 30%|███       | 17128/57000 [00:04<00:10, 3957.97it/s] 31%|███       | 17526/57000 [00:04<00:09, 3962.67it/s] 31%|███▏      | 17923/57000 [00:04<00:09, 3963.08it/s] 32%|███▏      | 18321/57000 [00:04<00:09, 3966.77it/s] 33%|███▎      | 18719/57000 [00:04<00:09, 3967.96it/s] 34%|███▎      | 19116/57000 [00:04<00:09, 3967.37it/s] 34%|███▍      | 19514/57000 [00:04<00:09, 3968.48it/s] 35%|███▍      | 19912/57000 [00:05<00:09, 3969.11it/s] 36%|███▌      | 20309/57000 [00:05<00:09, 3968.76it/s] 36%|███▋      | 20708/57000 [00:05<00:09, 3972.65it/s] 37%|███▋      | 21107/57000 [00:05<00:09, 3974.91it/s] 38%|███▊      | 21505/57000 [00:05<00:08, 3974.97it/s] 38%|███▊      | 21904/57000 [00:05<00:08, 3977.16it/s] 39%|███▉      | 22302/57000 [00:05<00:08, 3971.55it/s] 40%|███▉      | 22700/57000 [00:05<00:08, 3971.46it/s] 41%|████      | 23098/57000 [00:05<00:08, 3972.23it/s] 41%|████      | 23496/57000 [00:05<00:08, 3973.87it/s] 42%|████▏     | 23894/57000 [00:06<00:08, 3973.43it/s] 43%|████▎     | 24292/57000 [00:06<00:08, 3974.15it/s] 43%|████▎     | 24690/57000 [00:06<00:08, 3966.56it/s] 44%|████▍     | 25087/57000 [00:06<00:08, 3967.23it/s] 45%|████▍     | 25485/57000 [00:06<00:07, 3968.75it/s] 45%|████▌     | 25883/57000 [00:06<00:07, 3971.63it/s] 46%|████▌     | 26281/57000 [00:06<00:07, 3973.77it/s] 47%|████▋     | 26679/57000 [00:06<00:07, 3968.40it/s] 48%|████▊     | 27077/57000 [00:06<00:07, 3971.24it/s] 48%|████▊     | 27475/57000 [00:06<00:07, 3969.99it/s] 49%|████▉     | 27873/57000 [00:07<00:07, 3971.45it/s] 50%|████▉     | 28271/57000 [00:07<00:07, 3967.82it/s] 50%|█████     | 28670/57000 [00:07<00:07, 3971.66it/s] 51%|█████     | 29068/57000 [00:07<00:07, 3971.48it/s] 52%|█████▏    | 29466/57000 [00:07<00:06, 3972.59it/s] 52%|█████▏    | 29864/57000 [00:07<00:06, 3971.09it/s] 53%|█████▎    | 30262/57000 [00:07<00:06, 3968.95it/s] 54%|█████▍    | 30660/57000 [00:07<00:06, 3969.42it/s] 54%|█████▍    | 31059/57000 [00:07<00:06, 3972.94it/s] 55%|█████▌    | 31457/57000 [00:07<00:06, 3974.74it/s] 56%|█████▌    | 31855/57000 [00:08<00:06, 3971.05it/s] 57%|█████▋    | 32254/57000 [00:08<00:06, 3975.40it/s] 57%|█████▋    | 32652/57000 [00:08<00:06, 3971.69it/s] 58%|█████▊    | 33051/57000 [00:08<00:06, 3974.20it/s] 59%|█████▊    | 33449/57000 [00:08<00:05, 3972.87it/s] 59%|█████▉    | 33847/57000 [00:08<00:05, 3974.67it/s] 60%|██████    | 34245/57000 [00:08<00:05, 3973.37it/s] 61%|██████    | 34643/57000 [00:08<00:05, 3950.80it/s] 61%|██████▏   | 35040/57000 [00:08<00:05, 3954.85it/s] 62%|██████▏   | 35438/57000 [00:08<00:05, 3960.39it/s] 63%|██████▎   | 35836/57000 [00:09<00:05, 3963.52it/s] 64%|██████▎   | 36233/57000 [00:09<00:05, 3964.84it/s] 64%|██████▍   | 36631/57000 [00:09<00:05, 3966.93it/s] 65%|██████▍   | 37029/57000 [00:09<00:05, 3969.68it/s] 66%|██████▌   | 37426/57000 [00:09<00:04, 3957.07it/s] 66%|██████▋   | 37823/57000 [00:09<00:04, 3957.94it/s] 67%|██████▋   | 38220/57000 [00:09<00:04, 3961.44it/s] 68%|██████▊   | 38618/57000 [00:09<00:04, 3965.06it/s] 68%|██████▊   | 39016/57000 [00:09<00:04, 3967.76it/s] 69%|██████▉   | 39414/57000 [00:09<00:04, 3970.64it/s] 70%|██████▉   | 39812/57000 [00:10<00:04, 3968.30it/s] 71%|███████   | 40210/57000 [00:10<00:04, 3969.55it/s] 71%|███████   | 40608/57000 [00:10<00:04, 3971.28it/s] 72%|███████▏  | 41007/57000 [00:10<00:04, 3974.46it/s] 73%|███████▎  | 41405/57000 [00:10<00:03, 3973.15it/s] 73%|███████▎  | 41804/57000 [00:10<00:03, 3975.38it/s] 74%|███████▍  | 42202/57000 [00:10<00:03, 3970.91it/s] 75%|███████▍  | 42601/57000 [00:10<00:03, 3973.99it/s] 75%|███████▌  | 42999/57000 [00:10<00:03, 3974.57it/s] 76%|███████▌  | 43397/57000 [00:10<00:03, 3974.75it/s] 77%|███████▋  | 43795/57000 [00:11<00:03, 3974.22it/s] 78%|███████▊  | 44193/57000 [00:11<00:03, 3971.71it/s] 78%|███████▊  | 44591/57000 [00:11<00:03, 3968.77it/s] 79%|███████▉  | 44989/57000 [00:11<00:03, 3970.39it/s] 80%|███████▉  | 45387/57000 [00:11<00:02, 3970.92it/s] 80%|████████  | 45786/57000 [00:11<00:02, 3973.78it/s] 81%|████████  | 46184/57000 [00:11<00:02, 3973.94it/s] 82%|████████▏ | 46582/57000 [00:11<00:02, 3972.00it/s] 82%|████████▏ | 46980/57000 [00:11<00:02, 3973.61it/s] 83%|████████▎ | 47378/57000 [00:11<00:02, 3974.77it/s] 84%|████████▍ | 47776/57000 [00:12<00:02, 3975.21it/s] 85%|████████▍ | 48174/57000 [00:12<00:02, 3972.98it/s] 85%|████████▌ | 48572/57000 [00:12<00:02, 3973.41it/s] 86%|████████▌ | 48970/57000 [00:12<00:02, 3973.39it/s] 87%|████████▋ | 49368/57000 [00:12<00:01, 3971.39it/s] 87%|████████▋ | 49766/57000 [00:12<00:01, 3973.19it/s] 88%|████████▊ | 50164/57000 [00:12<00:01, 3970.15it/s] 89%|████████▊ | 50562/57000 [00:12<00:01, 3971.76it/s] 89%|████████▉ | 50960/57000 [00:12<00:01, 3970.48it/s] 90%|█████████ | 51359/57000 [00:12<00:01, 3974.06it/s] 91%|█████████ | 51757/57000 [00:13<00:01, 3973.47it/s] 92%|█████████▏| 52155/57000 [00:13<00:01, 3975.23it/s] 92%|█████████▏| 52553/57000 [00:13<00:01, 3973.62it/s] 93%|█████████▎| 52951/57000 [00:13<00:01, 3958.55it/s] 94%|█████████▎| 53347/57000 [00:13<00:00, 3951.40it/s] 94%|█████████▍| 53744/57000 [00:13<00:00, 3953.47it/s] 95%|█████████▍| 54141/57000 [00:13<00:00, 3956.32it/s] 96%|█████████▌| 54539/57000 [00:13<00:00, 3961.08it/s] 96%|█████████▋| 54937/57000 [00:13<00:00, 3965.68it/s] 97%|█████████▋| 55335/57000 [00:13<00:00, 3968.43it/s] 98%|█████████▊| 55733/57000 [00:14<00:00, 3971.72it/s] 98%|█████████▊| 56132/57000 [00:14<00:00, 3975.00it/s] 99%|█████████▉| 56530/57000 [00:14<00:00, 3976.07it/s]100%|█████████▉| 56928/57000 [00:14<00:00, 3976.46it/s]100%|██████████| 57000/57000 [00:14<00:00, 3967.91it/s]
2022-06-05 20:51:27 - loading data from datasets/SphericalMNIST_3000/valid.json
  0%|          | 0/3000 [00:00<?, ?it/s] 13%|█▎        | 404/3000 [00:00<00:00, 4034.20it/s] 27%|██▋       | 808/3000 [00:00<00:00, 4010.57it/s] 40%|████      | 1210/3000 [00:00<00:00, 4005.66it/s] 54%|█████▎    | 1611/3000 [00:00<00:00, 4004.12it/s] 67%|██████▋   | 2012/3000 [00:00<00:00, 4002.33it/s] 80%|████████  | 2413/3000 [00:00<00:00, 4003.64it/s] 94%|█████████▍| 2814/3000 [00:00<00:00, 4003.77it/s]100%|██████████| 3000/3000 [00:00<00:00, 4004.31it/s]
2022-06-05 20:51:27 - loading data from datasets/SphericalMNIST_3000/test.json
  0%|          | 0/10000 [00:00<?, ?it/s]  4%|▍         | 403/10000 [00:00<00:02, 4023.96it/s]  8%|▊         | 806/10000 [00:00<00:02, 3995.48it/s] 12%|█▏        | 1206/10000 [00:00<00:02, 3994.73it/s] 16%|█▌        | 1606/10000 [00:00<00:02, 3995.79it/s] 20%|██        | 2006/10000 [00:00<00:02, 3995.68it/s] 24%|██▍       | 2407/10000 [00:00<00:01, 3998.57it/s] 28%|██▊       | 2808/10000 [00:00<00:01, 3999.13it/s] 32%|███▏      | 3209/10000 [00:00<00:01, 3999.68it/s] 36%|███▌      | 3610/10000 [00:00<00:01, 4000.16it/s] 40%|████      | 4011/10000 [00:01<00:01, 3999.79it/s] 44%|████▍     | 4411/10000 [00:01<00:01, 3999.14it/s] 48%|████▊     | 4811/10000 [00:01<00:01, 3998.44it/s] 52%|█████▏    | 5211/10000 [00:01<00:01, 3997.50it/s] 56%|█████▌    | 5611/10000 [00:01<00:01, 3997.02it/s] 60%|██████    | 6011/10000 [00:01<00:00, 3996.00it/s] 64%|██████▍   | 6411/10000 [00:01<00:00, 3995.39it/s] 68%|██████▊   | 6811/10000 [00:01<00:00, 3989.10it/s] 72%|███████▏  | 7212/10000 [00:01<00:00, 3992.58it/s] 76%|███████▌  | 7612/10000 [00:01<00:00, 3991.42it/s] 80%|████████  | 8012/10000 [00:02<00:00, 3990.69it/s] 84%|████████▍ | 8413/10000 [00:02<00:00, 3994.23it/s] 88%|████████▊ | 8813/10000 [00:02<00:00, 3994.76it/s] 92%|█████████▏| 9213/10000 [00:02<00:00, 3993.73it/s] 96%|█████████▌| 9614/10000 [00:02<00:00, 3996.58it/s]100%|██████████| 10000/10000 [00:02<00:00, 3996.22it/s]
/home/ubuntu/anaconda3/envs/FWRENCH2/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)
2022-06-05 20:52:03 - LogisticRegression supervised: 1.0
2022-06-05 20:52:05 - LogisticRegression unlabeled train: 0.1253
2022-06-05 20:53:07 - label model train acc:    0.1253
2022-06-05 20:53:07 - label model coverage:     1.0
0.1253
