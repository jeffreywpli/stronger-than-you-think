/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/torchvision/datasets/mnist.py:498: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1631630836880/work/torch/csrc/utils/tensor_numpy.cpp:180.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
2022-05-05 15:08:53 - loading data from datasets/MNIST_3000/train.json
  0%|          | 0/57000 [00:00<?, ?it/s]  1%|▏         | 715/57000 [00:00<00:07, 7145.90it/s]  3%|▎         | 1440/57000 [00:00<00:07, 7204.15it/s]  4%|▍         | 2170/57000 [00:00<00:07, 7243.31it/s]  5%|▌         | 2897/57000 [00:00<00:07, 7253.69it/s]  6%|▋         | 3629/57000 [00:00<00:07, 7275.60it/s]  8%|▊         | 4358/57000 [00:00<00:07, 7280.42it/s]  9%|▉         | 5092/57000 [00:00<00:07, 7296.72it/s] 10%|█         | 5825/57000 [00:00<00:07, 7306.31it/s] 12%|█▏        | 6556/57000 [00:00<00:06, 7305.72it/s] 13%|█▎        | 7290/57000 [00:01<00:06, 7315.57it/s] 14%|█▍        | 8026/57000 [00:01<00:06, 7326.10it/s] 15%|█▌        | 8759/57000 [00:01<00:06, 7323.06it/s] 17%|█▋        | 9492/57000 [00:01<00:06, 7322.97it/s] 18%|█▊        | 10227/57000 [00:01<00:06, 7328.69it/s] 19%|█▉        | 10960/57000 [00:01<00:06, 7327.46it/s] 21%|██        | 11696/57000 [00:01<00:06, 7337.09it/s] 22%|██▏       | 12431/57000 [00:01<00:06, 7338.46it/s] 23%|██▎       | 13165/57000 [00:01<00:05, 7334.07it/s] 24%|██▍       | 13901/57000 [00:01<00:05, 7341.40it/s] 26%|██▌       | 14636/57000 [00:02<00:05, 7336.51it/s] 27%|██▋       | 15372/57000 [00:02<00:05, 7343.45it/s] 28%|██▊       | 16107/57000 [00:02<00:05, 7340.55it/s] 30%|██▉       | 16842/57000 [00:02<00:05, 7323.74it/s] 31%|███       | 17575/57000 [00:02<00:05, 7312.79it/s] 32%|███▏      | 18307/57000 [00:02<00:05, 7310.25it/s] 33%|███▎      | 19039/57000 [00:02<00:05, 7296.80it/s] 35%|███▍      | 19769/57000 [00:02<00:05, 7293.79it/s] 36%|███▌      | 20499/57000 [00:02<00:05, 7281.76it/s] 37%|███▋      | 21228/57000 [00:02<00:04, 7262.48it/s] 39%|███▊      | 21957/57000 [00:03<00:04, 7270.24it/s] 40%|███▉      | 22686/57000 [00:03<00:04, 7273.48it/s] 41%|████      | 23419/57000 [00:03<00:04, 7289.44it/s] 42%|████▏     | 24153/57000 [00:03<00:04, 7302.22it/s] 44%|████▎     | 24886/57000 [00:03<00:04, 7309.85it/s] 45%|████▍     | 25617/57000 [00:03<00:04, 7306.61it/s] 46%|████▌     | 26348/57000 [00:03<00:04, 7304.97it/s] 48%|████▊     | 27080/57000 [00:03<00:04, 7308.01it/s] 49%|████▉     | 27811/57000 [00:03<00:03, 7305.60it/s] 50%|█████     | 28542/57000 [00:03<00:03, 7231.43it/s] 51%|█████▏    | 29266/57000 [00:04<00:03, 7131.49it/s] 53%|█████▎    | 29993/57000 [00:04<00:03, 7170.91it/s] 54%|█████▍    | 30714/57000 [00:04<00:03, 7182.26it/s] 55%|█████▌    | 31441/57000 [00:04<00:03, 7207.31it/s] 56%|█████▋    | 32166/57000 [00:04<00:03, 7218.35it/s] 58%|█████▊    | 32893/57000 [00:04<00:03, 7232.88it/s] 59%|█████▉    | 33621/57000 [00:04<00:03, 7244.18it/s] 60%|██████    | 34349/57000 [00:04<00:03, 7254.52it/s] 62%|██████▏   | 35080/57000 [00:04<00:03, 7269.35it/s] 63%|██████▎   | 35809/57000 [00:04<00:02, 7275.39it/s] 64%|██████▍   | 36539/57000 [00:05<00:02, 7280.32it/s] 65%|██████▌   | 37268/57000 [00:05<00:02, 7281.64it/s] 67%|██████▋   | 37999/57000 [00:05<00:02, 7289.23it/s] 68%|██████▊   | 38728/57000 [00:05<00:02, 7287.33it/s] 69%|██████▉   | 39457/57000 [00:05<00:02, 7287.83it/s] 71%|███████   | 40186/57000 [00:05<00:02, 7280.48it/s] 72%|███████▏  | 40920/57000 [00:05<00:02, 7295.95it/s] 73%|███████▎  | 41651/57000 [00:05<00:02, 7298.43it/s] 74%|███████▍  | 42381/57000 [00:05<00:02, 7292.30it/s] 76%|███████▌  | 43111/57000 [00:05<00:01, 7288.36it/s] 77%|███████▋  | 43840/57000 [00:06<00:01, 7282.37it/s] 78%|███████▊  | 44570/57000 [00:06<00:01, 7284.87it/s] 79%|███████▉  | 45299/57000 [00:06<00:01, 7278.13it/s] 81%|████████  | 46031/57000 [00:06<00:01, 7288.76it/s] 82%|████████▏ | 46763/57000 [00:06<00:01, 7297.11it/s] 83%|████████▎ | 47495/57000 [00:06<00:01, 7300.97it/s] 85%|████████▍ | 48226/57000 [00:06<00:01, 7297.58it/s] 86%|████████▌ | 48958/57000 [00:06<00:01, 7302.00it/s] 87%|████████▋ | 49689/57000 [00:06<00:01, 7299.13it/s] 88%|████████▊ | 50420/57000 [00:06<00:00, 7300.08it/s] 90%|████████▉ | 51151/57000 [00:07<00:00, 7290.80it/s] 91%|█████████ | 51881/57000 [00:07<00:00, 7289.72it/s] 92%|█████████▏| 52610/57000 [00:07<00:00, 7288.59it/s] 94%|█████████▎| 53340/57000 [00:07<00:00, 7289.07it/s] 95%|█████████▍| 54069/57000 [00:07<00:00, 7284.80it/s] 96%|█████████▌| 54799/57000 [00:07<00:00, 7286.47it/s] 97%|█████████▋| 55529/57000 [00:07<00:00, 7287.82it/s] 99%|█████████▊| 56258/57000 [00:07<00:00, 7286.58it/s]100%|█████████▉| 56990/57000 [00:07<00:00, 7294.01it/s]100%|██████████| 57000/57000 [00:07<00:00, 7286.73it/s]
2022-05-05 15:09:01 - loading data from datasets/MNIST_3000/valid.json
  0%|          | 0/3000 [00:00<?, ?it/s] 25%|██▍       | 739/3000 [00:00<00:00, 7382.03it/s] 49%|████▉     | 1482/3000 [00:00<00:00, 7405.54it/s] 74%|███████▍  | 2225/3000 [00:00<00:00, 7413.80it/s] 99%|█████████▉| 2969/3000 [00:00<00:00, 7423.30it/s]100%|██████████| 3000/3000 [00:00<00:00, 7414.13it/s]
2022-05-05 15:09:02 - loading data from datasets/MNIST_3000/test.json
  0%|          | 0/10000 [00:00<?, ?it/s]  7%|▋         | 738/10000 [00:00<00:01, 7377.60it/s] 15%|█▍        | 1476/10000 [00:00<00:01, 7377.32it/s] 22%|██▏       | 2217/10000 [00:00<00:01, 7387.83it/s] 30%|██▉       | 2956/10000 [00:00<00:00, 7384.00it/s] 37%|███▋      | 3695/10000 [00:00<00:00, 7383.35it/s] 44%|████▍     | 4434/10000 [00:00<00:00, 7384.04it/s] 52%|█████▏    | 5174/10000 [00:00<00:00, 7386.59it/s] 59%|█████▉    | 5913/10000 [00:00<00:00, 7378.81it/s] 67%|██████▋   | 6652/10000 [00:00<00:00, 7381.30it/s] 74%|███████▍  | 7391/10000 [00:01<00:00, 7379.43it/s] 81%|████████▏ | 8129/10000 [00:01<00:00, 7377.34it/s] 89%|████████▊ | 8867/10000 [00:01<00:00, 7375.30it/s] 96%|█████████▌| 9605/10000 [00:01<00:00, 7368.01it/s]100%|██████████| 10000/10000 [00:01<00:00, 7376.86it/s]
2022-05-05 15:09:24 - ('DecisionTreeClassifier', 'LogisticRegression')
2022-05-05 15:09:24 - Using LF classes: [functools.partial(<class 'sklearn.tree._classes.DecisionTreeClassifier'>, max_depth=1), <class 'sklearn.linear_model._logistic.LogisticRegression'>]
Fitting MulticlassAdaptor... Class 0
  0%|          | 0/23 [00:00<?, ?it/s]  0%|          | 0/23 [27:03<?, ?it/s]
Traceback (most recent call last):
  File "examples/fwrench_examples/mnist.py", line 184, in <module>
    fire.Fire(main)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 141, in Fire
    component_trace = _Fire(component, args, parsed_flag_args, context, name)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 471, in _Fire
    target=component.__name__)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 681, in _CallAndUpdateTrace
    component = fn(*varargs, **kwargs)
  File "examples/fwrench_examples/mnist.py", line 127, in main
    selector.fit(valid_data_embed, train_data_embed)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/examples/fwrench_examples/utils.py", line 83, in fit
    self.lf_selectors[i].fit(labeled_data_i, unlabeled_data_i)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba_lf_selector.py", line 55, in fit
    model=self.lf_generator, scoring_fn=self.scoring_fn)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 145, in run_synthesizer
    scoring_fn=scoring_fn)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 77, in prune_heuristics
    L_temp_train = self.apply_heuristics(heuristics[i], self.train_primitive_matrix, feat_combos[i], beta_opt_temp) 
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 50, in apply_heuristics
    L = np.zeros((np.shape(primitive_matrix)[0],len(heuristics)))
numpy.core._exceptions.MemoryError: Unable to allocate 111. GiB for an array with shape (57000, 261632) and data type float64
