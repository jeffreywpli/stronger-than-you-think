/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/torchvision/datasets/mnist.py:498: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1631630836880/work/torch/csrc/utils/tensor_numpy.cpp:180.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
2022-05-05 13:14:40 - loading data from datasets/MNIST_3000/train.json
  0%|          | 0/57000 [00:00<?, ?it/s]  1%|▏         | 728/57000 [00:00<00:07, 7271.51it/s]  3%|▎         | 1466/57000 [00:00<00:07, 7332.96it/s]  4%|▍         | 2205/57000 [00:00<00:07, 7355.51it/s]  5%|▌         | 2944/57000 [00:00<00:07, 7368.22it/s]  6%|▋         | 3682/57000 [00:00<00:07, 7371.07it/s]  8%|▊         | 4422/57000 [00:00<00:07, 7380.32it/s]  9%|▉         | 5163/57000 [00:00<00:07, 7388.24it/s] 10%|█         | 5905/57000 [00:00<00:06, 7395.61it/s] 12%|█▏        | 6645/57000 [00:00<00:06, 7392.97it/s] 13%|█▎        | 7385/57000 [00:01<00:06, 7388.13it/s] 14%|█▍        | 8124/57000 [00:01<00:06, 7387.55it/s] 16%|█▌        | 8864/57000 [00:01<00:06, 7388.33it/s] 17%|█▋        | 9604/57000 [00:01<00:06, 7388.88it/s] 18%|█▊        | 10343/57000 [00:01<00:06, 7388.64it/s] 19%|█▉        | 11082/57000 [00:01<00:06, 7387.53it/s] 21%|██        | 11823/57000 [00:01<00:06, 7391.78it/s] 22%|██▏       | 12563/57000 [00:01<00:06, 7386.98it/s] 23%|██▎       | 13302/57000 [00:01<00:05, 7386.00it/s] 25%|██▍       | 14042/57000 [00:01<00:05, 7389.06it/s] 26%|██▌       | 14782/57000 [00:02<00:05, 7390.46it/s] 27%|██▋       | 15525/57000 [00:02<00:05, 7400.55it/s] 29%|██▊       | 16266/57000 [00:02<00:05, 7403.25it/s] 30%|██▉       | 17007/57000 [00:02<00:05, 7402.33it/s] 31%|███       | 17750/57000 [00:02<00:05, 7410.42it/s] 32%|███▏      | 18492/57000 [00:02<00:05, 7394.42it/s] 34%|███▎      | 19232/57000 [00:02<00:05, 7386.44it/s] 35%|███▌      | 19972/57000 [00:02<00:05, 7388.87it/s] 36%|███▋      | 20711/57000 [00:02<00:04, 7385.34it/s] 38%|███▊      | 21451/57000 [00:02<00:04, 7387.88it/s] 39%|███▉      | 22192/57000 [00:03<00:04, 7392.70it/s] 40%|████      | 22932/57000 [00:03<00:04, 7374.48it/s] 42%|████▏     | 23672/57000 [00:03<00:04, 7379.16it/s] 43%|████▎     | 24410/57000 [00:03<00:04, 7378.44it/s] 44%|████▍     | 25148/57000 [00:03<00:04, 7377.98it/s] 45%|████▌     | 25888/57000 [00:03<00:04, 7382.38it/s] 47%|████▋     | 26627/57000 [00:03<00:04, 7383.24it/s] 48%|████▊     | 27366/57000 [00:03<00:04, 7382.66it/s] 49%|████▉     | 28105/57000 [00:03<00:03, 7378.60it/s] 51%|█████     | 28843/57000 [00:03<00:03, 7378.74it/s] 52%|█████▏    | 29581/57000 [00:04<00:03, 7378.60it/s] 53%|█████▎    | 30320/57000 [00:04<00:03, 7380.50it/s] 54%|█████▍    | 31059/57000 [00:04<00:03, 7382.19it/s] 56%|█████▌    | 31798/57000 [00:04<00:03, 7376.02it/s] 57%|█████▋    | 32539/57000 [00:04<00:03, 7385.50it/s] 58%|█████▊    | 33278/57000 [00:04<00:03, 7375.52it/s] 60%|█████▉    | 34017/57000 [00:04<00:03, 7377.75it/s] 61%|██████    | 34755/57000 [00:04<00:03, 7377.73it/s] 62%|██████▏   | 35495/57000 [00:04<00:02, 7381.64it/s] 64%|██████▎   | 36236/57000 [00:04<00:02, 7388.26it/s] 65%|██████▍   | 36977/57000 [00:05<00:02, 7392.03it/s] 66%|██████▌   | 37717/57000 [00:05<00:02, 7385.46it/s] 67%|██████▋   | 38459/57000 [00:05<00:02, 7394.31it/s] 69%|██████▉   | 39202/57000 [00:05<00:02, 7402.21it/s] 70%|███████   | 39943/57000 [00:05<00:02, 7398.25it/s] 71%|███████▏  | 40683/57000 [00:05<00:02, 7391.61it/s] 73%|███████▎  | 41424/57000 [00:05<00:02, 7396.44it/s] 74%|███████▍  | 42164/57000 [00:05<00:02, 7392.14it/s] 75%|███████▌  | 42905/57000 [00:05<00:01, 7395.72it/s] 77%|███████▋  | 43646/57000 [00:05<00:01, 7399.30it/s] 78%|███████▊  | 44388/57000 [00:06<00:01, 7402.59it/s] 79%|███████▉  | 45130/57000 [00:06<00:01, 7405.70it/s] 80%|████████  | 45871/57000 [00:06<00:01, 7406.50it/s] 82%|████████▏ | 46613/57000 [00:06<00:01, 7408.06it/s] 83%|████████▎ | 47354/57000 [00:06<00:01, 7401.73it/s] 84%|████████▍ | 48095/57000 [00:06<00:01, 7398.91it/s] 86%|████████▌ | 48837/57000 [00:06<00:01, 7404.53it/s] 87%|████████▋ | 49578/57000 [00:06<00:01, 7405.70it/s] 88%|████████▊ | 50319/57000 [00:06<00:00, 7400.99it/s] 90%|████████▉ | 51060/57000 [00:06<00:00, 7394.43it/s] 91%|█████████ | 51803/57000 [00:07<00:00, 7402.39it/s] 92%|█████████▏| 52545/57000 [00:07<00:00, 7406.84it/s] 93%|█████████▎| 53286/57000 [00:07<00:00, 7401.12it/s] 95%|█████████▍| 54027/57000 [00:07<00:00, 7402.21it/s] 96%|█████████▌| 54770/57000 [00:07<00:00, 7409.16it/s] 97%|█████████▋| 55511/57000 [00:07<00:00, 7404.24it/s] 99%|█████████▊| 56253/57000 [00:07<00:00, 7408.52it/s]100%|█████████▉| 56997/57000 [00:07<00:00, 7416.83it/s]100%|██████████| 57000/57000 [00:07<00:00, 7391.08it/s]
2022-05-05 13:14:48 - loading data from datasets/MNIST_3000/valid.json
  0%|          | 0/3000 [00:00<?, ?it/s] 25%|██▍       | 745/3000 [00:00<00:00, 7449.07it/s] 50%|████▉     | 1491/3000 [00:00<00:00, 7450.91it/s] 75%|███████▍  | 2239/3000 [00:00<00:00, 7462.13it/s]100%|█████████▉| 2986/3000 [00:00<00:00, 7459.60it/s]100%|██████████| 3000/3000 [00:00<00:00, 7455.97it/s]
2022-05-05 13:14:49 - loading data from datasets/MNIST_3000/test.json
  0%|          | 0/10000 [00:00<?, ?it/s]  7%|▋         | 741/10000 [00:00<00:01, 7404.11it/s] 15%|█▍        | 1486/10000 [00:00<00:01, 7428.38it/s] 22%|██▏       | 2232/10000 [00:00<00:01, 7439.76it/s] 30%|██▉       | 2979/10000 [00:00<00:00, 7449.29it/s] 37%|███▋      | 3724/10000 [00:00<00:00, 7447.91it/s] 45%|████▍     | 4469/10000 [00:00<00:00, 7437.59it/s] 52%|█████▏    | 5213/10000 [00:00<00:00, 7437.90it/s] 60%|█████▉    | 5958/10000 [00:00<00:00, 7441.57it/s] 67%|██████▋   | 6703/10000 [00:00<00:00, 7441.68it/s] 74%|███████▍  | 7448/10000 [00:01<00:00, 7441.52it/s] 82%|████████▏ | 8193/10000 [00:01<00:00, 7441.84it/s] 89%|████████▉ | 8938/10000 [00:01<00:00, 7431.45it/s] 97%|█████████▋| 9682/10000 [00:01<00:00, 7432.02it/s]100%|██████████| 10000/10000 [00:01<00:00, 7436.08it/s]
2022-05-05 13:15:12 - ('DecisionTreeClassifier', 'LogisticRegression')
2022-05-05 13:15:12 - Using LF classes: [functools.partial(<class 'sklearn.tree._classes.DecisionTreeClassifier'>, max_depth=1), <class 'sklearn.linear_model._logistic.LogisticRegression'>]
Fitting MulticlassAdaptor... Class 0
  0%|          | 0/23 [00:00<?, ?it/s]  0%|          | 0/23 [28:43<?, ?it/s]
Traceback (most recent call last):
  File "examples/fwrench_examples/mnist.py", line 184, in <module>
    fire.Fire(main)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 141, in Fire
    component_trace = _Fire(component, args, parsed_flag_args, context, name)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 471, in _Fire
    target=component.__name__)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 681, in _CallAndUpdateTrace
    component = fn(*varargs, **kwargs)
  File "examples/fwrench_examples/mnist.py", line 127, in main
    selector.fit(valid_data_embed, train_data_embed)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/examples/fwrench_examples/utils.py", line 83, in fit
    self.lf_selectors[i].fit(labeled_data_i, unlabeled_data_i)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba_lf_selector.py", line 55, in fit
    model=self.lf_generator, scoring_fn=self.scoring_fn)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 145, in run_synthesizer
    scoring_fn=scoring_fn)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 77, in prune_heuristics
    L_temp_train = self.apply_heuristics(heuristics[i], self.train_primitive_matrix, feat_combos[i], beta_opt_temp) 
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 50, in apply_heuristics
    L = np.zeros((np.shape(primitive_matrix)[0],len(heuristics)))
numpy.core._exceptions.MemoryError: Unable to allocate 111. GiB for an array with shape (57000, 261632) and data type float64
