/hdd2/kaylee/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/torchvision/datasets/mnist.py:498: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1631630836880/work/torch/csrc/utils/tensor_numpy.cpp:180.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
/hdd2/kaylee/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/torchvision/datasets/mnist.py:62: UserWarning: train_data has been renamed data
  warnings.warn("train_data has been renamed data")
/hdd2/kaylee/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/torchvision/datasets/mnist.py:52: UserWarning: train_labels has been renamed targets
  warnings.warn("train_labels has been renamed targets")
/hdd2/kaylee/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/torchvision/datasets/mnist.py:67: UserWarning: test_data has been renamed data
  warnings.warn("test_data has been renamed data")
/hdd2/kaylee/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/torchvision/datasets/mnist.py:57: UserWarning: test_labels has been renamed targets
  warnings.warn("test_labels has been renamed targets")
getting mnist data
projecting train data set
500/600001000/600001500/600002000/600002500/600003000/600003500/600004000/600004500/600005000/600005500/600006000/600006500/600007000/600007500/600008000/600008500/600009000/600009500/6000010000/6000010500/6000011000/6000011500/6000012000/6000012500/6000013000/6000013500/6000014000/6000014500/6000015000/6000015500/6000016000/6000016500/6000017000/6000017500/6000018000/6000018500/6000019000/6000019500/6000020000/6000020500/6000021000/6000021500/6000022000/6000022500/6000023000/6000023500/6000024000/6000024500/6000025000/6000025500/6000026000/6000026500/6000027000/6000027500/6000028000/6000028500/6000029000/6000029500/6000030000/6000030500/6000031000/6000031500/6000032000/6000032500/6000033000/6000033500/6000034000/6000034500/6000035000/6000035500/6000036000/6000036500/6000037000/6000037500/6000038000/6000038500/6000039000/6000039500/6000040000/6000040500/6000041000/6000041500/6000042000/6000042500/6000043000/6000043500/6000044000/6000044500/6000045000/6000045500/6000046000/6000046500/6000047000/6000047500/6000048000/6000048500/6000049000/6000049500/6000050000/6000050500/6000051000/6000051500/6000052000/6000052500/6000053000/6000053500/6000054000/6000054500/6000055000/6000055500/6000056000/6000056500/6000057000/6000057500/6000058000/6000058500/6000059000/6000059500/6000060000/60000
projecting test data set
500/100001000/100001500/100002000/100002500/100003000/100003500/100004000/100004500/100005000/100005500/100006000/100006500/100007000/100007500/100008000/100008500/100009000/100009500/1000010000/10000
writing pickle
done
getting mnist data
projecting train data set
500/600001000/600001500/600002000/600002500/600003000/600003500/600004000/600004500/600005000/600005500/600006000/600006500/600007000/600007500/600008000/600008500/600009000/600009500/6000010000/6000010500/6000011000/6000011500/6000012000/6000012500/6000013000/6000013500/6000014000/6000014500/6000015000/6000015500/6000016000/6000016500/6000017000/6000017500/6000018000/6000018500/6000019000/6000019500/6000020000/6000020500/6000021000/6000021500/6000022000/6000022500/6000023000/6000023500/6000024000/6000024500/6000025000/6000025500/6000026000/6000026500/6000027000/6000027500/6000028000/6000028500/6000029000/6000029500/6000030000/6000030500/6000031000/6000031500/6000032000/6000032500/6000033000/6000033500/6000034000/6000034500/6000035000/6000035500/6000036000/6000036500/6000037000/6000037500/6000038000/6000038500/6000039000/6000039500/6000040000/6000040500/6000041000/6000041500/6000042000/6000042500/6000043000/6000043500/6000044000/6000044500/6000045000/6000045500/6000046000/6000046500/6000047000/6000047500/6000048000/6000048500/6000049000/6000049500/6000050000/6000050500/6000051000/6000051500/6000052000/6000052500/6000053000/6000053500/6000054000/6000054500/6000055000/6000055500/6000056000/6000056500/6000057000/6000057500/6000058000/6000058500/6000059000/6000059500/6000060000/60000
projecting test data set
500/100001000/100001500/100002000/100002500/100003000/100003500/100004000/100004500/100005000/100005500/100006000/100006500/100007000/100007500/100008000/100008500/100009000/100009500/1000010000/10000
writing pickle
done
getting mnist data
projecting train data set
500/600001000/600001500/600002000/600002500/600003000/600003500/600004000/600004500/600005000/600005500/600006000/600006500/600007000/600007500/600008000/600008500/600009000/600009500/6000010000/6000010500/6000011000/6000011500/6000012000/6000012500/6000013000/6000013500/6000014000/6000014500/6000015000/6000015500/6000016000/6000016500/6000017000/6000017500/6000018000/6000018500/6000019000/6000019500/6000020000/6000020500/6000021000/6000021500/6000022000/6000022500/6000023000/6000023500/6000024000/6000024500/6000025000/6000025500/6000026000/6000026500/6000027000/6000027500/6000028000/6000028500/6000029000/6000029500/6000030000/6000030500/6000031000/6000031500/6000032000/6000032500/6000033000/6000033500/6000034000/6000034500/6000035000/6000035500/6000036000/6000036500/6000037000/6000037500/6000038000/6000038500/6000039000/6000039500/6000040000/6000040500/6000041000/6000041500/6000042000/6000042500/6000043000/6000043500/6000044000/6000044500/6000045000/6000045500/6000046000/6000046500/6000047000/6000047500/6000048000/6000048500/6000049000/6000049500/6000050000/6000050500/6000051000/6000051500/6000052000/6000052500/6000053000/6000053500/6000054000/6000054500/6000055000/6000055500/6000056000/6000056500/6000057000/6000057500/6000058000/6000058500/6000059000/6000059500/6000060000/60000
projecting test data set
500/100001000/100001500/100002000/100002500/100003000/100003500/100004000/100004500/100005000/100005500/100006000/100006500/100007000/100007500/100008000/100008500/100009000/100009500/1000010000/10000
writing pickle
done
2022-06-05 04:14:30 - loading data from datasets/SphericalMNIST_3000/train.json
  0%|          | 0/57000 [00:00<?, ?it/s]  1%|▏         | 759/57000 [00:00<00:07, 7586.77it/s]  3%|▎         | 1522/57000 [00:00<00:07, 7607.97it/s]  4%|▍         | 2288/57000 [00:00<00:07, 7629.80it/s]  5%|▌         | 3051/57000 [00:00<00:07, 7519.42it/s]  7%|▋         | 3804/57000 [00:00<00:07, 7459.94it/s]  8%|▊         | 4551/57000 [00:00<00:07, 7429.97it/s]  9%|▉         | 5295/57000 [00:00<00:06, 7414.46it/s] 11%|█         | 6037/57000 [00:00<00:06, 7405.00it/s] 12%|█▏        | 6778/57000 [00:00<00:06, 7404.80it/s] 13%|█▎        | 7519/57000 [00:01<00:06, 7399.99it/s] 14%|█▍        | 8260/57000 [00:01<00:06, 7398.07it/s] 16%|█▌        | 9000/57000 [00:01<00:06, 7391.10it/s] 17%|█▋        | 9740/57000 [00:01<00:06, 7385.77it/s] 18%|█▊        | 10479/57000 [00:01<00:06, 7383.82it/s] 20%|█▉        | 11218/57000 [00:01<00:06, 7380.96it/s] 21%|██        | 11958/57000 [00:01<00:06, 7386.24it/s] 22%|██▏       | 12700/57000 [00:01<00:05, 7393.69it/s] 24%|██▎       | 13442/57000 [00:01<00:05, 7398.67it/s] 25%|██▍       | 14184/57000 [00:01<00:05, 7404.93it/s] 26%|██▌       | 14927/57000 [00:02<00:05, 7410.56it/s] 27%|██▋       | 15671/57000 [00:02<00:05, 7416.48it/s] 29%|██▉       | 16414/57000 [00:02<00:05, 7420.07it/s] 30%|███       | 17157/57000 [00:02<00:05, 7417.46it/s] 31%|███▏      | 17900/57000 [00:02<00:05, 7420.36it/s] 33%|███▎      | 18644/57000 [00:02<00:05, 7425.60it/s] 34%|███▍      | 19387/57000 [00:02<00:05, 7423.48it/s] 35%|███▌      | 20130/57000 [00:02<00:04, 7422.17it/s] 37%|███▋      | 20873/57000 [00:02<00:04, 7414.05it/s] 38%|███▊      | 21615/57000 [00:02<00:04, 7395.44it/s] 39%|███▉      | 22355/57000 [00:03<00:04, 7385.51it/s] 41%|████      | 23096/57000 [00:03<00:04, 7390.07it/s] 42%|████▏     | 23837/57000 [00:03<00:04, 7393.24it/s] 43%|████▎     | 24579/57000 [00:03<00:04, 7398.83it/s] 44%|████▍     | 25319/57000 [00:03<00:04, 7398.40it/s] 46%|████▌     | 26060/57000 [00:03<00:04, 7400.34it/s] 47%|████▋     | 26801/57000 [00:03<00:04, 7398.69it/s] 48%|████▊     | 27542/57000 [00:03<00:03, 7399.19it/s] 50%|████▉     | 28283/57000 [00:03<00:03, 7399.66it/s] 51%|█████     | 29024/57000 [00:03<00:03, 7400.59it/s] 52%|█████▏    | 29765/57000 [00:04<00:03, 7399.19it/s] 54%|█████▎    | 30507/57000 [00:04<00:03, 7402.62it/s] 55%|█████▍    | 31251/57000 [00:04<00:03, 7411.29it/s] 56%|█████▌    | 31993/57000 [00:04<00:03, 7413.52it/s] 57%|█████▋    | 32738/57000 [00:04<00:03, 7423.43it/s] 59%|█████▊    | 33483/57000 [00:04<00:03, 7429.19it/s] 60%|██████    | 34227/57000 [00:04<00:03, 7431.02it/s] 61%|██████▏   | 34971/57000 [00:04<00:02, 7427.24it/s] 63%|██████▎   | 35716/57000 [00:04<00:02, 7431.55it/s] 64%|██████▍   | 36460/57000 [00:04<00:02, 7427.39it/s] 65%|██████▌   | 37203/57000 [00:05<00:02, 7424.89it/s] 67%|██████▋   | 37946/57000 [00:05<00:02, 7426.35it/s] 68%|██████▊   | 38689/57000 [00:05<00:02, 7422.45it/s] 69%|██████▉   | 39433/57000 [00:05<00:02, 7425.79it/s] 70%|███████   | 40176/57000 [00:05<00:02, 7425.37it/s] 72%|███████▏  | 40921/57000 [00:05<00:02, 7430.11it/s] 73%|███████▎  | 41666/57000 [00:05<00:02, 7434.04it/s] 74%|███████▍  | 42411/57000 [00:05<00:01, 7438.66it/s] 76%|███████▌  | 43155/57000 [00:05<00:01, 7435.14it/s] 77%|███████▋  | 43901/57000 [00:05<00:01, 7441.63it/s] 78%|███████▊  | 44646/57000 [00:06<00:01, 7440.52it/s] 80%|███████▉  | 45391/57000 [00:06<00:01, 7440.32it/s] 81%|████████  | 46136/57000 [00:06<00:01, 7435.45it/s] 82%|████████▏ | 46880/57000 [00:06<00:01, 7433.65it/s] 84%|████████▎ | 47626/57000 [00:06<00:01, 7439.21it/s] 85%|████████▍ | 48370/57000 [00:06<00:01, 7434.24it/s] 86%|████████▌ | 49114/57000 [00:06<00:01, 7435.25it/s] 87%|████████▋ | 49858/57000 [00:06<00:00, 7433.33it/s] 89%|████████▉ | 50602/57000 [00:06<00:00, 7420.75it/s] 90%|█████████ | 51345/57000 [00:06<00:00, 7422.08it/s] 91%|█████████▏| 52090/57000 [00:07<00:00, 7428.96it/s] 93%|█████████▎| 52833/57000 [00:07<00:00, 7427.71it/s] 94%|█████████▍| 53577/57000 [00:07<00:00, 7429.88it/s] 95%|█████████▌| 54322/57000 [00:07<00:00, 7433.94it/s] 97%|█████████▋| 55067/57000 [00:07<00:00, 7438.60it/s] 98%|█████████▊| 55813/57000 [00:07<00:00, 7442.47it/s] 99%|█████████▉| 56558/57000 [00:07<00:00, 7443.80it/s]100%|██████████| 57000/57000 [00:07<00:00, 7423.06it/s]
2022-06-05 04:14:37 - loading data from datasets/SphericalMNIST_3000/valid.json
  0%|          | 0/3000 [00:00<?, ?it/s] 25%|██▍       | 741/3000 [00:00<00:00, 7407.36it/s] 49%|████▉     | 1482/3000 [00:00<00:00, 7391.36it/s] 74%|███████▍  | 2222/3000 [00:00<00:00, 7391.55it/s] 99%|█████████▉| 2963/3000 [00:00<00:00, 7397.90it/s]100%|██████████| 3000/3000 [00:00<00:00, 7393.78it/s]
2022-06-05 04:14:38 - loading data from datasets/SphericalMNIST_3000/test.json
  0%|          | 0/10000 [00:00<?, ?it/s]  7%|▋         | 741/10000 [00:00<00:01, 7401.11it/s] 15%|█▍        | 1483/10000 [00:00<00:01, 7408.08it/s] 22%|██▏       | 2226/10000 [00:00<00:01, 7414.15it/s] 30%|██▉       | 2969/10000 [00:00<00:00, 7418.71it/s] 37%|███▋      | 3711/10000 [00:00<00:00, 7417.30it/s] 45%|████▍     | 4453/10000 [00:00<00:00, 7416.08it/s] 52%|█████▏    | 5195/10000 [00:00<00:00, 7413.20it/s] 59%|█████▉    | 5937/10000 [00:00<00:00, 7405.49it/s] 67%|██████▋   | 6678/10000 [00:00<00:00, 7402.06it/s] 74%|███████▍  | 7419/10000 [00:01<00:00, 7402.26it/s] 82%|████████▏ | 8162/10000 [00:01<00:00, 7407.83it/s] 89%|████████▉ | 8904/10000 [00:01<00:00, 7409.66it/s] 96%|█████████▋| 9645/10000 [00:01<00:00, 7407.41it/s]100%|██████████| 10000/10000 [00:01<00:00, 7408.44it/s]
/hdd2/kaylee/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py:765: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)
(67100, 3600)
2022-06-05 04:15:01 - LogisticRegression supervised: 1.0
2022-06-05 04:15:01 - LogisticRegression unlabeled train: 0.1483
2022-06-05 04:15:02 - label model train acc:    0.1483
2022-06-05 04:15:02 - label model coverage:     1.0
0.1483
