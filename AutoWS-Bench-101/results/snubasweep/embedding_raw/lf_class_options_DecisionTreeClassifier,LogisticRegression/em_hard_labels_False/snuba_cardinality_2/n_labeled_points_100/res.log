/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/torchvision/datasets/mnist.py:498: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1631630836880/work/torch/csrc/utils/tensor_numpy.cpp:180.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
2022-05-05 07:17:35 - loading data from datasets/MNIST_3000/train.json
  0%|          | 0/57000 [00:00<?, ?it/s]  1%|▏         | 727/57000 [00:00<00:07, 7266.56it/s]  3%|▎         | 1459/57000 [00:00<00:07, 7296.03it/s]  4%|▍         | 2192/57000 [00:00<00:07, 7308.06it/s]  5%|▌         | 2928/57000 [00:00<00:07, 7326.67it/s]  6%|▋         | 3666/57000 [00:00<00:07, 7343.44it/s]  8%|▊         | 4404/57000 [00:00<00:07, 7354.05it/s]  9%|▉         | 5140/57000 [00:00<00:07, 7353.13it/s] 10%|█         | 5878/57000 [00:00<00:06, 7358.99it/s] 12%|█▏        | 6617/57000 [00:00<00:06, 7366.74it/s] 13%|█▎        | 7354/57000 [00:01<00:06, 7364.37it/s] 14%|█▍        | 8093/57000 [00:01<00:06, 7370.57it/s] 15%|█▌        | 8831/57000 [00:01<00:06, 7373.12it/s] 17%|█▋        | 9569/57000 [00:01<00:06, 7375.15it/s] 18%|█▊        | 10313/57000 [00:01<00:06, 7391.80it/s] 19%|█▉        | 11056/57000 [00:01<00:06, 7402.86it/s] 21%|██        | 11799/57000 [00:01<00:06, 7409.29it/s] 22%|██▏       | 12540/57000 [00:01<00:06, 7409.03it/s] 23%|██▎       | 13282/57000 [00:01<00:05, 7409.64it/s] 25%|██▍       | 14024/57000 [00:01<00:05, 7410.24it/s] 26%|██▌       | 14767/57000 [00:02<00:05, 7414.36it/s] 27%|██▋       | 15512/57000 [00:02<00:05, 7424.42it/s] 29%|██▊       | 16255/57000 [00:02<00:05, 7424.94it/s] 30%|██▉       | 16998/57000 [00:02<00:05, 7405.70it/s] 31%|███       | 17739/57000 [00:02<00:05, 7394.50it/s] 32%|███▏      | 18479/57000 [00:02<00:05, 7381.64it/s] 34%|███▎      | 19218/57000 [00:02<00:05, 7379.14it/s] 35%|███▌      | 19960/57000 [00:02<00:05, 7389.38it/s] 36%|███▋      | 20703/57000 [00:02<00:04, 7400.31it/s] 38%|███▊      | 21445/57000 [00:02<00:04, 7404.30it/s] 39%|███▉      | 22186/57000 [00:03<00:04, 7404.76it/s] 40%|████      | 22927/57000 [00:03<00:04, 7400.67it/s] 42%|████▏     | 23668/57000 [00:03<00:04, 7396.47it/s] 43%|████▎     | 24408/57000 [00:03<00:04, 7395.17it/s] 44%|████▍     | 25148/57000 [00:03<00:04, 7392.49it/s] 45%|████▌     | 25890/57000 [00:03<00:04, 7399.87it/s] 47%|████▋     | 26632/57000 [00:03<00:04, 7404.02it/s] 48%|████▊     | 27373/57000 [00:03<00:04, 7402.70it/s] 49%|████▉     | 28114/57000 [00:03<00:03, 7397.53it/s] 51%|█████     | 28854/57000 [00:03<00:03, 7391.85it/s] 52%|█████▏    | 29594/57000 [00:04<00:03, 7385.44it/s] 53%|█████▎    | 30333/57000 [00:04<00:03, 7380.74it/s] 55%|█████▍    | 31072/57000 [00:04<00:03, 7375.04it/s] 56%|█████▌    | 31810/57000 [00:04<00:03, 7363.78it/s] 57%|█████▋    | 32553/57000 [00:04<00:03, 7381.06it/s] 58%|█████▊    | 33292/57000 [00:04<00:03, 7379.95it/s] 60%|█████▉    | 34032/57000 [00:04<00:03, 7385.55it/s] 61%|██████    | 34771/57000 [00:04<00:03, 7369.36it/s] 62%|██████▏   | 35508/57000 [00:04<00:02, 7368.68it/s] 64%|██████▎   | 36247/57000 [00:04<00:02, 7373.89it/s] 65%|██████▍   | 36985/57000 [00:05<00:02, 7358.26it/s] 66%|██████▌   | 37721/57000 [00:05<00:02, 7357.07it/s] 67%|██████▋   | 38457/57000 [00:05<00:02, 7356.80it/s] 69%|██████▉   | 39193/57000 [00:05<00:02, 7354.60it/s] 70%|███████   | 39929/57000 [00:05<00:02, 7352.35it/s] 71%|███████▏  | 40666/57000 [00:05<00:02, 7356.79it/s] 73%|███████▎  | 41407/57000 [00:05<00:02, 7371.52it/s] 74%|███████▍  | 42145/57000 [00:05<00:02, 7365.86it/s] 75%|███████▌  | 42882/57000 [00:05<00:01, 7366.46it/s] 77%|███████▋  | 43619/57000 [00:05<00:01, 7363.44it/s] 78%|███████▊  | 44356/57000 [00:06<00:01, 7359.19it/s] 79%|███████▉  | 45095/57000 [00:06<00:01, 7368.34it/s] 80%|████████  | 45836/57000 [00:06<00:01, 7378.08it/s] 82%|████████▏ | 46577/57000 [00:06<00:01, 7386.36it/s] 83%|████████▎ | 47316/57000 [00:06<00:01, 7385.10it/s] 84%|████████▍ | 48060/57000 [00:06<00:01, 7398.99it/s] 86%|████████▌ | 48803/57000 [00:06<00:01, 7406.36it/s] 87%|████████▋ | 49544/57000 [00:06<00:01, 7388.82it/s] 88%|████████▊ | 50283/57000 [00:06<00:00, 7325.68it/s] 90%|████████▉ | 51020/57000 [00:06<00:00, 7338.44it/s] 91%|█████████ | 51761/57000 [00:07<00:00, 7357.63it/s] 92%|█████████▏| 52505/57000 [00:07<00:00, 7381.06it/s] 93%|█████████▎| 53245/57000 [00:07<00:00, 7385.60it/s] 95%|█████████▍| 53984/57000 [00:07<00:00, 7378.13it/s] 96%|█████████▌| 54726/57000 [00:07<00:00, 7389.34it/s] 97%|█████████▋| 55466/57000 [00:07<00:00, 7390.04it/s] 99%|█████████▊| 56206/57000 [00:07<00:00, 7390.74it/s]100%|█████████▉| 56946/57000 [00:07<00:00, 7380.28it/s]100%|██████████| 57000/57000 [00:07<00:00, 7379.36it/s]
2022-05-05 07:17:43 - loading data from datasets/MNIST_3000/valid.json
  0%|          | 0/3000 [00:00<?, ?it/s] 25%|██▍       | 744/3000 [00:00<00:00, 7438.52it/s] 50%|████▉     | 1491/3000 [00:00<00:00, 7455.31it/s] 75%|███████▍  | 2239/3000 [00:00<00:00, 7465.11it/s]100%|█████████▉| 2986/3000 [00:00<00:00, 7466.28it/s]100%|██████████| 3000/3000 [00:00<00:00, 7460.61it/s]
2022-05-05 07:17:43 - loading data from datasets/MNIST_3000/test.json
  0%|          | 0/10000 [00:00<?, ?it/s]  7%|▋         | 743/10000 [00:00<00:01, 7429.48it/s] 15%|█▍        | 1489/10000 [00:00<00:01, 7447.01it/s] 22%|██▏       | 2236/10000 [00:00<00:01, 7456.58it/s] 30%|██▉       | 2985/10000 [00:00<00:00, 7466.14it/s] 37%|███▋      | 3732/10000 [00:00<00:00, 7456.34it/s] 45%|████▍     | 4478/10000 [00:00<00:00, 7443.54it/s] 52%|█████▏    | 5223/10000 [00:00<00:00, 7423.75it/s] 60%|█████▉    | 5966/10000 [00:00<00:00, 7420.16it/s] 67%|██████▋   | 6710/10000 [00:00<00:00, 7425.23it/s] 75%|███████▍  | 7453/10000 [00:01<00:00, 7424.55it/s] 82%|████████▏ | 8199/10000 [00:01<00:00, 7433.96it/s] 89%|████████▉ | 8943/10000 [00:01<00:00, 7434.22it/s] 97%|█████████▋| 9687/10000 [00:01<00:00, 7420.35it/s]100%|██████████| 10000/10000 [00:01<00:00, 7432.75it/s]
2022-05-05 07:17:47 - ('DecisionTreeClassifier', 'LogisticRegression')
2022-05-05 07:17:47 - Using LF classes: [functools.partial(<class 'sklearn.tree._classes.DecisionTreeClassifier'>, max_depth=1), <class 'sklearn.linear_model._logistic.LogisticRegression'>]
Fitting MulticlassAdaptor... Class 0
  0%|          | 0/23 [00:00<?, ?it/s]  0%|          | 0/23 [47:50<?, ?it/s]
Traceback (most recent call last):
  File "examples/fwrench_examples/mnist.py", line 184, in <module>
    fire.Fire(main)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 141, in Fire
    component_trace = _Fire(component, args, parsed_flag_args, context, name)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 471, in _Fire
    target=component.__name__)
  File "/home/nick/anaconda3/envs/FWRENCH/lib/python3.7/site-packages/fire/core.py", line 681, in _CallAndUpdateTrace
    component = fn(*varargs, **kwargs)
  File "examples/fwrench_examples/mnist.py", line 127, in main
    selector.fit(valid_data_embed, train_data_embed)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/examples/fwrench_examples/utils.py", line 83, in fit
    self.lf_selectors[i].fit(labeled_data_i, unlabeled_data_i)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba_lf_selector.py", line 55, in fit
    model=self.lf_generator, scoring_fn=self.scoring_fn)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 145, in run_synthesizer
    scoring_fn=scoring_fn)
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 77, in prune_heuristics
    L_temp_train = self.apply_heuristics(heuristics[i], self.train_primitive_matrix, feat_combos[i], beta_opt_temp) 
  File "/hdd2/nick/github.com/Kaylee0501/FWRENCH/fwrench/lf_selectors/snuba/heuristic_generator.py", line 50, in apply_heuristics
    L = np.zeros((np.shape(primitive_matrix)[0],len(heuristics)))
numpy.core._exceptions.MemoryError: Unable to allocate 261. GiB for an array with shape (57000, 613872) and data type float64
